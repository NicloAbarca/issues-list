[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34732",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34732/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34732/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34732/events",
    "html_url": "https://github.com/rails/rails/pull/34732",
    "id": 391881317,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5Mjc2ODUx",
    "number": 34732,
    "title": "Add rails db:system command",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-12-17T20:40:50Z",
    "updated_at": "2018-12-20T16:13:34Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34732",
      "html_url": "https://github.com/rails/rails/pull/34732",
      "diff_url": "https://github.com/rails/rails/pull/34732.diff",
      "patch_url": "https://github.com/rails/rails/pull/34732.patch"
    },
    "body": "### Summary\r\n\r\nAdd `rails db:system` command to display an app's DBMS for a given environment.\r\n\r\nPart one of https://github.com/rails/rails/issues/34710.\r\n\r\ncc @dhh, @kaspth "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34731",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34731/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34731/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34731/events",
    "html_url": "https://github.com/rails/rails/pull/34731",
    "id": 391816528,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MjI2MzE0",
    "number": 34731,
    "title": "Support in-flight jobs stored before individual execution counters for `retry_on`",
    "user": {
      "login": "rosa",
      "id": 813033,
      "node_id": "MDQ6VXNlcjgxMzAzMw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/813033?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosa",
      "html_url": "https://github.com/rosa",
      "followers_url": "https://api.github.com/users/rosa/followers",
      "following_url": "https://api.github.com/users/rosa/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosa/subscriptions",
      "organizations_url": "https://api.github.com/users/rosa/orgs",
      "repos_url": "https://api.github.com/users/rosa/repos",
      "events_url": "https://api.github.com/users/rosa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 123812746,
        "node_id": "MDU6TGFiZWwxMjM4MTI3NDY=",
        "url": "https://api.github.com/repos/rails/rails/labels/activejob",
        "name": "activejob",
        "color": "5319e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-17T17:31:24Z",
    "updated_at": "2018-12-17T17:34:20Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34731",
      "html_url": "https://github.com/rails/rails/pull/34731",
      "diff_url": "https://github.com/rails/rails/pull/34731.diff",
      "patch_url": "https://github.com/rails/rails/pull/34731.patch"
    },
    "body": "### Summary\r\n\r\nhttps://github.com/rails/rails/pull/34352 introduced individual execution counters for `retry_on` declarations. I run into an issue with in-flight jobs when trying to upgrade a production app to Rails edge. Jobs enqueued before this change won't have the individual counters as part of their data, which means they'd error if they happen to be retried, with\r\n```\r\nNoMethodError: undefined method `+' for nil:NilClass\r\n  from active_job/exceptions.rb:47:in `block in retry_on'\r\n```\r\n\r\nSince I was there, I tried to make the behaviour of these individual counters a bit clearer, as I was confused in the beginning about how many times each exception would be retried with a declaration like this, and figured that others might be confused as well:\r\n```\r\nretry_on CustomException, OtherException, attempts: 3\r\n```\r\n\r\nWith the current implementation, the job would be retried  at most 3 times in total, for both\r\n`CustomException` and `OtherException`. To have the job retry 3 times at most for each exception individually, the following `retry_on` declarations are necessary:\r\n\r\n```\r\nretry_on CustomException, attempts: 3\r\nretry_on OtherException, attempts: 3\r\n```"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34730",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34730/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34730/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34730/events",
    "html_url": "https://github.com/rails/rails/issues/34730",
    "id": 391808706,
    "node_id": "MDU6SXNzdWUzOTE4MDg3MDY=",
    "number": 34730,
    "title": "`has_many through:, dependent: :restrict_with_exception` doesn't work if `through` association is `dependent: :destroy` ",
    "user": {
      "login": "ojab",
      "id": 153388,
      "node_id": "MDQ6VXNlcjE1MzM4OA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/153388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ojab",
      "html_url": "https://github.com/ojab",
      "followers_url": "https://api.github.com/users/ojab/followers",
      "following_url": "https://api.github.com/users/ojab/following{/other_user}",
      "gists_url": "https://api.github.com/users/ojab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ojab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ojab/subscriptions",
      "organizations_url": "https://api.github.com/users/ojab/orgs",
      "repos_url": "https://api.github.com/users/ojab/repos",
      "events_url": "https://api.github.com/users/ojab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ojab/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-17T17:10:54Z",
    "updated_at": "2018-12-17T17:12:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "See the test case, works fine in rails-5.0 and fails on rails >= 5.1. Also `user.feedback.reload` before destroying fixes the issue.\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire 'bundler/inline'\r\n\r\ngemfile(true) do\r\n  source 'https://rubygems.org'\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem 'rails', github: 'rails/rails'\r\n  gem 'sqlite3'\r\nend\r\n\r\nrequire 'active_record'\r\nrequire 'minitest/autorun'\r\nrequire 'logger'\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:')\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :users, force: true do |t|\r\n  end\r\n\r\n  create_table :roles, force: true do |t|\r\n    t.integer :user_id\r\n  end\r\n\r\n  create_table :feedbacks, force: true do |t|\r\n    t.integer :role_id\r\n  end\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\n  has_many :roles, dependent: :destroy\r\n  has_many :feedbacks, through: :roles,\r\n                       dependent: :restrict_with_exception\r\nend\r\n\r\nclass Role < ActiveRecord::Base\r\n  belongs_to :user\r\n  has_many :feedbacks\r\nend\r\n\r\nclass Feedback < ActiveRecord::Base\r\n  belongs_to :role\r\n  has_one :user, through: :role\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    user = User.create!\r\n    role = Role.create!(user: user)\r\n    feedback = Feedback.create!(role: role)\r\n\r\n    assert_raises ActiveRecord::DeleteRestrictionError do\r\n      # `user.feedbacks.reload` call fixes the issue\r\n      user.destroy!\r\n    end\r\n  end\r\nend\r\n\r\n```\r\n\r\n### Expected behavior\r\n`ActiveRecord::DeleteRestrictionError` is raised\r\n\r\n### Actual behavior\r\n`user` record is destroyed \r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 2.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34729",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34729/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34729/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34729/events",
    "html_url": "https://github.com/rails/rails/issues/34729",
    "id": 391799711,
    "node_id": "MDU6SXNzdWUzOTE3OTk3MTE=",
    "number": 34729,
    "title": "Inconsistent capture of a template fragment",
    "user": {
      "login": "alaz",
      "id": 12065,
      "node_id": "MDQ6VXNlcjEyMDY1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/12065?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alaz",
      "html_url": "https://github.com/alaz",
      "followers_url": "https://api.github.com/users/alaz/followers",
      "following_url": "https://api.github.com/users/alaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/alaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alaz/subscriptions",
      "organizations_url": "https://api.github.com/users/alaz/orgs",
      "repos_url": "https://api.github.com/users/alaz/repos",
      "events_url": "https://api.github.com/users/alaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-17T16:49:06Z",
    "updated_at": "2018-12-21T19:29:56Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I have a helper method accepting a block (similar to `link_to`). I would expect it to capture a template fragment inside the block to selectively wrap it or omit based on conditions. But the behaviour differs depending on where this helper method is defined: in a helper module, or in a controller as `helper_method` or in a concern.\r\n\r\n### Steps to reproduce\r\n\r\nI have prepared a trivial test project [here](https://github.com/alaz/erb_helper_capture). Also I am going to show the most evident parts here in the issue.\r\n\r\nI have a helper module\r\n\r\n```\r\nmodule HomeHelper\r\n  def my_link_h(&block)\r\n    link_to '/helper' do\r\n      capture &block\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nThen I have a helper method defined in a controller:\r\n\r\n```\r\n  helper_method :my_link_hm\r\n\r\n  def my_link_hm(&block)\r\n    helpers.link_to '/helper_method' do\r\n      helpers.capture &block\r\n    end\r\n  end\r\n```\r\n\r\nand a similar helper defined in a concern:\r\n\r\n```\r\nmodule MyConcern\r\n  extend ActiveSupport::Concern\r\n\r\n  included do\r\n    helper_method :my_link_c\r\n  end\r\n\r\n  private\r\n\r\n  def my_link_c(&block)\r\n    helpers.link_to '/concern/helper_method' do\r\n      helpers.capture &block\r\n    end\r\n  end\r\nend\r\n```\r\n\r\nI render all three in a view:\r\n\r\n```\r\n<%= my_link_h do %>\r\n  <%= 'inside helper' %>\r\n<% end -%>\r\n\r\n<%= my_link_hm do %>\r\n  <%= 'inside helper_method' %>\r\n<% end -%>\r\n\r\n<%= my_link_c do %>\r\n  <%= 'inside concern helper_method' %>\r\n<% end -%>\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect all inner fragments to be rendered inside their `<a/>`s.\r\n\r\n### Actual behavior\r\n\r\nThe actual output is\r\n\r\n```\r\n<a href=\"/helper\">\r\n  inside helper\r\n</a>\r\n\r\n  inside helper_method\r\n<a href=\"/helper_method\">\r\n</a>\r\n\r\n  inside concern helper_method\r\n<a href=\"/concern/helper_method\">\r\n</a>\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.2\r\n\r\n**Ruby version**: 2.5.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34727",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34727/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34727/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34727/events",
    "html_url": "https://github.com/rails/rails/pull/34727",
    "id": 391790305,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MjA1Njkx",
    "number": 34727,
    "title": "Finding Orphan Records [ci skip]",
    "user": {
      "login": "tomrossi7",
      "id": 64581,
      "node_id": "MDQ6VXNlcjY0NTgx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/64581?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomrossi7",
      "html_url": "https://github.com/tomrossi7",
      "followers_url": "https://api.github.com/users/tomrossi7/followers",
      "following_url": "https://api.github.com/users/tomrossi7/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomrossi7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomrossi7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomrossi7/subscriptions",
      "organizations_url": "https://api.github.com/users/tomrossi7/orgs",
      "repos_url": "https://api.github.com/users/tomrossi7/repos",
      "events_url": "https://api.github.com/users/tomrossi7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomrossi7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-17T16:27:57Z",
    "updated_at": "2018-12-18T14:33:42Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34727",
      "html_url": "https://github.com/rails/rails/pull/34727",
      "diff_url": "https://github.com/rails/rails/pull/34727.diff",
      "patch_url": "https://github.com/rails/rails/pull/34727.patch"
    },
    "body": "### Summary\r\nAs discussed [here](https://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/sT8uzQb8Oa8), I would like to introduce a way for simplifying the search for orphan records within ActiveRecord.\r\n\r\nCurrently you would do something like this:\r\n`Post.left_joins(:author).where(authors: { id: nil })`\r\n\r\nI would like to introduce an API like this:\r\n`Post.where.missing(:author)`\r\n\r\n### Other Information\r\nI've gotten started, but could use some feedback and direction from someone more experienced with the innards of ActiveRecord. I've modeled the `missing` method after the `not` method in the `query_methods.rb`:\r\n\r\n```\r\n  def missing(*args)\r\n    args.each do |arg|\r\n      opts = { arg => { id: nil } }\r\n      @scope.left_joins(arg)\r\n      @scope.references!(PredicateBuilder.references(opts))\r\n      @scope.where_clause += @scope.where(opts)\r\n    end\r\n    @scope\r\n  end\r\n```\r\n#### 1. Adding the left join\r\nIn order to add the join to the current scope, I am just calling the `left_joins` method, but that doesn't appear to actually modify the scope. Should I be looking at the `spawn` method?\r\n\r\n#### 2. References in the where clause\r\nI copied the `references!` call from the `not` method, but I'm not sure what it is actually doing. That is where my error is currently pointing. ☹️"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34725",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34725/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34725/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34725/events",
    "html_url": "https://github.com/rails/rails/pull/34725",
    "id": 391648800,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MDk1MjYx",
    "number": 34725,
    "title": "Add rescue from ActiveRecord::RecordNotUnique",
    "user": {
      "login": "djezzzl",
      "id": 9407725,
      "node_id": "MDQ6VXNlcjk0MDc3MjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9407725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djezzzl",
      "html_url": "https://github.com/djezzzl",
      "followers_url": "https://api.github.com/users/djezzzl/followers",
      "following_url": "https://api.github.com/users/djezzzl/following{/other_user}",
      "gists_url": "https://api.github.com/users/djezzzl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djezzzl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djezzzl/subscriptions",
      "organizations_url": "https://api.github.com/users/djezzzl/orgs",
      "repos_url": "https://api.github.com/users/djezzzl/repos",
      "events_url": "https://api.github.com/users/djezzzl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djezzzl/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-17T10:32:51Z",
    "updated_at": "2018-12-17T16:24:13Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34725",
      "html_url": "https://github.com/rails/rails/pull/34725",
      "diff_url": "https://github.com/rails/rails/pull/34725.diff",
      "patch_url": "https://github.com/rails/rails/pull/34725.patch"
    },
    "body": "### Summary\r\n\r\nAccording to https://github.com/rails/rails/issues/34650 I have provided a PR which improves the behaviour of `ActiveRecord::Validations::UniquenessValidator`. Because the validator itself cannot guarantee the uniqueness we should have unique contstraints in the database. But having them will throw `ActiveRecord::RecordNotUnique` error with current implementation. In order to provide better experience with the framework, we should recognize such errors and process them properly like validation is failed. \r\n\r\nRelying on database constraints inside the framework seems a good idea after @dhh introduced [create_or_find_by](https://github.com/rails/rails/pull/31989). "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34723",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34723/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34723/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34723/events",
    "html_url": "https://github.com/rails/rails/pull/34723",
    "id": 391529648,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM5MDA2NzUx",
    "number": 34723,
    "title": "Update the failure message when the CSRF token is invalid or not provided",
    "user": {
      "login": "rccassity",
      "id": 32692924,
      "node_id": "MDQ6VXNlcjMyNjkyOTI0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/32692924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rccassity",
      "html_url": "https://github.com/rccassity",
      "followers_url": "https://api.github.com/users/rccassity/followers",
      "following_url": "https://api.github.com/users/rccassity/following{/other_user}",
      "gists_url": "https://api.github.com/users/rccassity/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rccassity/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rccassity/subscriptions",
      "organizations_url": "https://api.github.com/users/rccassity/orgs",
      "repos_url": "https://api.github.com/users/rccassity/repos",
      "events_url": "https://api.github.com/users/rccassity/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rccassity/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-17T01:43:05Z",
    "updated_at": "2018-12-17T01:54:45Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34723",
      "html_url": "https://github.com/rails/rails/pull/34723",
      "diff_url": "https://github.com/rails/rails/pull/34723.diff",
      "patch_url": "https://github.com/rails/rails/pull/34723.patch"
    },
    "body": "### Summary\r\n\r\nBe more specific in the log message when CSRF verification falls because of the token."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34716",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34716/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34716/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34716/events",
    "html_url": "https://github.com/rails/rails/pull/34716",
    "id": 391415020,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4OTM0NDY4",
    "number": 34716,
    "title": "ActionCable: Same origin match against X-FORWARDED-HOST when proxying",
    "user": {
      "login": "skateman",
      "id": 649130,
      "node_id": "MDQ6VXNlcjY0OTEzMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/649130?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skateman",
      "html_url": "https://github.com/skateman",
      "followers_url": "https://api.github.com/users/skateman/followers",
      "following_url": "https://api.github.com/users/skateman/following{/other_user}",
      "gists_url": "https://api.github.com/users/skateman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skateman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skateman/subscriptions",
      "organizations_url": "https://api.github.com/users/skateman/orgs",
      "repos_url": "https://api.github.com/users/skateman/repos",
      "events_url": "https://api.github.com/users/skateman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skateman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 300028327,
        "node_id": "MDU6TGFiZWwzMDAwMjgzMjc=",
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-15T21:56:54Z",
    "updated_at": "2018-12-17T11:34:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34716",
      "html_url": "https://github.com/rails/rails/pull/34716",
      "diff_url": "https://github.com/rails/rails/pull/34716.diff",
      "patch_url": "https://github.com/rails/rails/pull/34716.patch"
    },
    "body": "When using `allow_same_origin_as_host` with a reverse proxy the `HOST` header is set to the proxy host which will cause the CSRF protection to forbid the request. Each time a request hits a reverse proxy, it\r\nupdated the HOST header and also prepends the host from the previous request to the `X-FORWARDED-FOR` header. When the request finally hits the server where ActionCable is running, the first host in the header will be the right one for us.\r\n\r\nI am proposing to change my original idea introduced in 268c340 to test against the first element of this header when it is set."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34715",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34715/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34715/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34715/events",
    "html_url": "https://github.com/rails/rails/issues/34715",
    "id": 391397018,
    "node_id": "MDU6SXNzdWUzOTEzOTcwMTg=",
    "number": 34715,
    "title": "Log a warning if you run SQLite in production",
    "user": {
      "login": "nsuchy",
      "id": 8227641,
      "node_id": "MDQ6VXNlcjgyMjc2NDE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8227641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nsuchy",
      "html_url": "https://github.com/nsuchy",
      "followers_url": "https://api.github.com/users/nsuchy/followers",
      "following_url": "https://api.github.com/users/nsuchy/following{/other_user}",
      "gists_url": "https://api.github.com/users/nsuchy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nsuchy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nsuchy/subscriptions",
      "organizations_url": "https://api.github.com/users/nsuchy/orgs",
      "repos_url": "https://api.github.com/users/nsuchy/repos",
      "events_url": "https://api.github.com/users/nsuchy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nsuchy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 15,
    "created_at": "2018-12-15T17:33:43Z",
    "updated_at": "2018-12-27T16:23:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nCreate a Rails app which connects to SQLite, run as production.\r\n\r\n### Expected behavior\r\nLog a warning that running SQLite in production is not recommended.\r\n\r\n### Actual behavior\r\nNo warning is logged.\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.2.2\r\n\r\n**Ruby version**: ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-darwin18]"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34714",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34714/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34714/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34714/events",
    "html_url": "https://github.com/rails/rails/pull/34714",
    "id": 391330921,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODgyMzIz",
    "number": 34714,
    "title": "Action Cable: allow multiple instances of Server::Base with different configs",
    "user": {
      "login": "palkan",
      "id": 1516722,
      "node_id": "MDQ6VXNlcjE1MTY3MjI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1516722?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/palkan",
      "html_url": "https://github.com/palkan",
      "followers_url": "https://api.github.com/users/palkan/followers",
      "following_url": "https://api.github.com/users/palkan/following{/other_user}",
      "gists_url": "https://api.github.com/users/palkan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/palkan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/palkan/subscriptions",
      "organizations_url": "https://api.github.com/users/palkan/orgs",
      "repos_url": "https://api.github.com/users/palkan/repos",
      "events_url": "https://api.github.com/users/palkan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/palkan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 300028327,
        "node_id": "MDU6TGFiZWwzMDAwMjgzMjc=",
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-15T01:39:05Z",
    "updated_at": "2018-12-15T15:22:35Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34714",
      "html_url": "https://github.com/rails/rails/pull/34714",
      "diff_url": "https://github.com/rails/rails/pull/34714.diff",
      "patch_url": "https://github.com/rails/rails/pull/34714.patch"
    },
    "body": "### Context\r\n\r\nWhen trying to create a separate _cable_ instance (e.g. within an engine), we faced a problem of `ActionCable::Server::Base` relying on the _global_ configuration (i.e. `ActionCable::Server::Base.config`). \r\n\r\nWe want our engine to have a separate, isolated, Cable server instance with its own configuration.\r\n\r\nSee the example app using this patch: https://github.com/palkan/engine-cable-app\r\n\r\n### Summary\r\n\r\n- Add ability to pass a config as a `Server.new` argument.\r\n\r\n### Other Information\r\n\r\nThis problem has been already discussed here: https://github.com/rails/rails/pull/27425#discussion_r96065280 (we've adjusted the test from that PR as well).\r\n\r\nThe related issue not included into this patch (separate PR?): currently, only the Redis adapter supports channels prefixes.  With the ability to have _engined_ cables we'll need to isolate streams for all _distributed_ adapters (e.g. `postgresql`, `async`/`inline` adapters do not share anything).\r\n\r\nOne potential caveat of using multiples cables within the app is the lack of isolation for channel classes, i.e. it is possible to subscribe (or at least try to) to any channel from any connection (see https://github.com/rails/rails/blob/v5.2.2/actioncable/lib/action_cable/connection/subscriptions.rb#L35).\r\n\r\nOne possible solution is to add `config.base_channel_class` parameter and use it instead of a `ActionCable::Channel::Base` (i.e. `config.base_channel_class >= subscription_klass`).\r\n\r\nAnother way is to get away from using Ruby class names as identifiers, and build a per-connection registry/map of identifiers->class (like it's done in https://github.com/palkan/litecable).\r\n\r\nP.S. Thanks to @composerinteralia for pairing with me on this feature."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34712",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34712/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34712/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34712/events",
    "html_url": "https://github.com/rails/rails/pull/34712",
    "id": 391316165,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODcxNzU4",
    "number": 34712,
    "title": "Return result_set with payload, to use in ActiveSupport::Notifications",
    "user": {
      "login": "mjsommer",
      "id": 2990481,
      "node_id": "MDQ6VXNlcjI5OTA0ODE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2990481?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjsommer",
      "html_url": "https://github.com/mjsommer",
      "followers_url": "https://api.github.com/users/mjsommer/followers",
      "following_url": "https://api.github.com/users/mjsommer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjsommer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjsommer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjsommer/subscriptions",
      "organizations_url": "https://api.github.com/users/mjsommer/orgs",
      "repos_url": "https://api.github.com/users/mjsommer/repos",
      "events_url": "https://api.github.com/users/mjsommer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjsommer/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-14T23:47:44Z",
    "updated_at": "2018-12-17T19:01:59Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34712",
      "html_url": "https://github.com/rails/rails/pull/34712",
      "diff_url": "https://github.com/rails/rails/pull/34712.diff",
      "patch_url": "https://github.com/rails/rails/pull/34712.patch"
    },
    "body": "Hello, I am requesting the inclusion of result_set with payload, to use in ActiveSupport::Notifications pub/sub. Currently, I am required to use class_eval to extend ActiveRecord, but would prefer a cleaner solution.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34711",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34711/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34711/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34711/events",
    "html_url": "https://github.com/rails/rails/pull/34711",
    "id": 391312923,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODY5Mjkx",
    "number": 34711,
    "title": "Optimize performance of PostgreSQL timestamptz type",
    "user": {
      "login": "stanhu",
      "id": 963826,
      "node_id": "MDQ6VXNlcjk2MzgyNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/963826?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanhu",
      "html_url": "https://github.com/stanhu",
      "followers_url": "https://api.github.com/users/stanhu/followers",
      "following_url": "https://api.github.com/users/stanhu/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanhu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanhu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanhu/subscriptions",
      "organizations_url": "https://api.github.com/users/stanhu/orgs",
      "repos_url": "https://api.github.com/users/stanhu/repos",
      "events_url": "https://api.github.com/users/stanhu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanhu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107190,
        "node_id": "MDU6TGFiZWwxMDcxOTA=",
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF",
        "default": false
      },
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-14T23:28:31Z",
    "updated_at": "2018-12-21T09:01:24Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34711",
      "html_url": "https://github.com/rails/rails/pull/34711",
      "diff_url": "https://github.com/rails/rails/pull/34711.diff",
      "patch_url": "https://github.com/rails/rails/pull/34711.patch"
    },
    "body": "ActiveModel's `fast_string_to_time` optimizes the parsing of ISO\r\ntimestamps. However, the fallback mechanism for parsing a value from\r\nPostgreSQL's `timestamp with time zone` is a bit slow because\r\n`Date::_parse` requires a number of unnecessary memory allocations.\r\n\r\nWe can speed this up and reduce memory allocations by using a regular\r\nexpression to parse. Note that time zones in hh:mm format will not be\r\nany faster because the regular expression slows down the common cases.\r\n\r\n```ruby\r\nrequire 'active_record'\r\nrequire 'active_support'\r\nrequire 'active_record/connection_adapters/postgresql_adapter'\r\nrequire 'benchmark/ips'\r\n\r\nmodule ActiveRecord\r\n  module ConnectionAdapters\r\n    module PostgreSQL\r\n      module OID # :nodoc:\r\n        class DateTimeFast < DateTime # :nodoc:\r\n          ISO_DATETIME_TZ = /\\A(\\d{4})-(\\d\\d)-(\\d\\d) (\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?([+|-]\\d\\d)?\\z/\r\n\r\n          private\r\n\r\n          def fast_string_to_time(string)\r\n            if string =~ ISO_DATETIME_TZ\r\n              microsec = parse_microseconds($7)\r\n              offset = parse_offset($8)\r\n              new_time $1.to_i, $2.to_i, $3.to_i, $4.to_i, $5.to_i, $6.to_i, microsec, offset\r\n            end\r\n          end\r\n\r\n          def parse_microseconds(microsec_part)\r\n            if microsec_part && microsec_part.start_with?(\".\") && microsec_part.length == 7\r\n              microsec_part[0] = \"\"\r\n              microsec_part.to_i\r\n            else\r\n              (microsec_part.to_r * 1_000_000).to_i\r\n            end\r\n          end\r\n\r\n          def parse_offset(offset_part)\r\n            if offset_part\r\n              offset_part.to_i * 3600\r\n            else\r\n              nil\r\n            end\r\n          end\r\n        end\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\ntimestamps = ['2016-01-02 12:34:56.123456+06',\r\n              '2016-01-02 12:34:56.123456',\r\n              '2016-01-02 12:34:56',\r\n              '2016-01-02 12:34:56.123456+06:30',\r\n              '2016-01-02 12:34:56.123456+0630']\r\n\r\ntimestamps.each do |timestamp|\r\n  Benchmark.ips do |x|\r\n    x.report(\"orig\") {\r\n      ActiveRecord::ConnectionAdapters::PostgreSQL::OID::DateTime.new.send(:cast_value, timestamp)\r\n    }\r\n\r\n    x.report(\"new\") {\r\n      ActiveRecord::ConnectionAdapters::PostgreSQL::OID::DateTimeFast.new.send(:cast_value, timestamp)\r\n    }\r\n\r\n    x.compare!\r\n  end\r\nend\r\n```\r\n\r\n````\r\nWarming up --------------------------------------\r\n                orig     3.539k i/100ms\r\n                 new    11.820k i/100ms\r\nCalculating -------------------------------------\r\n                orig     40.713k (± 1.9%) i/s -    205.262k in   5.043505s\r\n                 new    131.824k (± 2.5%) i/s -    661.920k in   5.024375s\r\n\r\nComparison:\r\n                 new:   131823.9 i/s\r\n                orig:    40713.5 i/s - 3.24x  slower\r\n\r\nWarming up --------------------------------------\r\n                orig    14.334k i/100ms\r\n                 new    14.039k i/100ms\r\nCalculating -------------------------------------\r\n                orig    150.395k (± 2.6%) i/s -    759.702k in   5.054721s\r\n                 new    149.746k (± 2.2%) i/s -    758.106k in   5.064994s\r\n\r\nComparison:\r\n                orig:   150395.3 i/s\r\n                 new:   149746.1 i/s - same-ish: difference falls within error\r\n\r\nWarming up --------------------------------------\r\n                orig    14.983k i/100ms\r\n                 new    14.349k i/100ms\r\nCalculating -------------------------------------\r\n                orig    153.344k (± 3.7%) i/s -    779.116k in   5.088030s\r\n                 new    154.053k (± 2.3%) i/s -    774.846k in   5.032427s\r\n\r\nComparison:\r\n                 new:   154053.5 i/s\r\n                orig:   153344.1 i/s - same-ish: difference falls within error\r\n\r\nWarming up --------------------------------------\r\n                orig     3.964k i/100ms\r\n                 new     3.910k i/100ms\r\nCalculating -------------------------------------\r\n                orig     39.842k (± 3.5%) i/s -    202.164k in   5.080392s\r\n                 new     38.030k (± 3.6%) i/s -    191.590k in   5.044700s\r\n\r\nComparison:\r\n                orig:    39841.8 i/s\r\n                 new:    38029.7 i/s - same-ish: difference falls within error\r\n\r\nWarming up --------------------------------------\r\n                orig     3.722k i/100ms\r\n                 new     3.831k i/100ms\r\nCalculating -------------------------------------\r\n                orig     39.551k (± 5.1%) i/s -    197.266k in   5.001564s\r\n                 new     38.824k (± 7.5%) i/s -    195.381k in   5.065277s\r\n\r\nComparison:\r\n                orig:    39551.0 i/s\r\n                 new:    38824.3 i/s - same-ish: difference falls within error\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34710",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34710/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34710/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34710/events",
    "html_url": "https://github.com/rails/rails/issues/34710",
    "id": 391302574,
    "node_id": "MDU6SXNzdWUzOTEzMDI1NzQ=",
    "number": 34710,
    "title": "Add rails db:change SYSTEM=postgresql|mysql|whatever",
    "user": {
      "login": "dhh",
      "id": 2741,
      "node_id": "MDQ6VXNlcjI3NDE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2741?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhh",
      "html_url": "https://github.com/dhh",
      "followers_url": "https://api.github.com/users/dhh/followers",
      "following_url": "https://api.github.com/users/dhh/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhh/subscriptions",
      "organizations_url": "https://api.github.com/users/dhh/orgs",
      "repos_url": "https://api.github.com/users/dhh/repos",
      "events_url": "https://api.github.com/users/dhh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "gmcgibbon",
        "id": 5162312,
        "node_id": "MDQ6VXNlcjUxNjIzMTI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmcgibbon",
        "html_url": "https://github.com/gmcgibbon",
        "followers_url": "https://api.github.com/users/gmcgibbon/followers",
        "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
        "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
        "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
        "repos_url": "https://api.github.com/users/gmcgibbon/repos",
        "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 24,
      "closed_issues": 54,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-01-04T19:46:54Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 7,
    "created_at": "2018-12-14T22:37:09Z",
    "updated_at": "2018-12-15T17:31:44Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "It's common to create a new Rails app without specifying the database system upfront. That means you'll get the sqlite system by default, which is great until you actually have to deploy in production. Then you usually want to swap sqlite out with something else, like MySQL or PostgreSQL. Doing so is too much of a hassle today.\r\n\r\nI'd therefore like to see that we add a command that makes this easy. Running `rails db:change SYSTEM=postgresql` should overwrite config/database.yml with the database.yml config that we already keep in Railties for when a new app is started with `--database=postgresql`. It should also replace the `gem \"sqlite\"` line in the Gemfile with the PostgreSQL line."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34709",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34709/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34709/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34709/events",
    "html_url": "https://github.com/rails/rails/pull/34709",
    "id": 391249985,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4ODI3Mjg3",
    "number": 34709,
    "title": "Use ES6 and Webpacker in ActionCable guide.",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 150377,
        "node_id": "MDU6TGFiZWwxNTAzNzc=",
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "javan",
      "id": 5355,
      "node_id": "MDQ6VXNlcjUzNTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javan",
      "html_url": "https://github.com/javan",
      "followers_url": "https://api.github.com/users/javan/followers",
      "following_url": "https://api.github.com/users/javan/following{/other_user}",
      "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
      "organizations_url": "https://api.github.com/users/javan/orgs",
      "repos_url": "https://api.github.com/users/javan/repos",
      "events_url": "https://api.github.com/users/javan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javan/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "javan",
        "id": 5355,
        "node_id": "MDQ6VXNlcjUzNTU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5355?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/javan",
        "html_url": "https://github.com/javan",
        "followers_url": "https://api.github.com/users/javan/followers",
        "following_url": "https://api.github.com/users/javan/following{/other_user}",
        "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
        "organizations_url": "https://api.github.com/users/javan/orgs",
        "repos_url": "https://api.github.com/users/javan/repos",
        "events_url": "https://api.github.com/users/javan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/javan/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-14T20:02:03Z",
    "updated_at": "2019-01-03T18:07:52Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34709",
      "html_url": "https://github.com/rails/rails/pull/34709",
      "diff_url": "https://github.com/rails/rails/pull/34709.diff",
      "patch_url": "https://github.com/rails/rails/pull/34709.patch"
    },
    "body": "### Summary\r\n\r\nI noticed in the guide we're still using sprockets and coffeescript to demo action cable. Since Webpacker is going to be default in Rails 6, and ActionCable has been converted to ES6, I think this makes sense to change.\r\n\r\nI've never actually used ActionCable in a non-trivial app before, so I'd like some feedback on the snippets."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34708",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34708/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34708/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34708/events",
    "html_url": "https://github.com/rails/rails/pull/34708",
    "id": 391203935,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4Nzk0MzA4",
    "number": 34708,
    "title": "Insert SQLite binary as blob",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-14T17:41:38Z",
    "updated_at": "2018-12-31T22:07:03Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34708",
      "html_url": "https://github.com/rails/rails/pull/34708",
      "diff_url": "https://github.com/rails/rails/pull/34708.diff",
      "patch_url": "https://github.com/rails/rails/pull/34708.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/34701.\r\n\r\nInserts SQLite binary columns as blobs. This way, they can be found by their type casted hex value.\r\n\r\nhttps://github.com/sparklemotion/sqlite3-ruby/blob/master/faq/faq.md#how-do-i-insert-binary-data-into-the-database"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34705",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34705/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34705/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34705/events",
    "html_url": "https://github.com/rails/rails/pull/34705",
    "id": 391018260,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4NjQ4NjM5",
    "number": 34705,
    "title": "Check MEMCACHE_SERVERS in connect to memchached server",
    "user": {
      "login": "unasuke",
      "id": 4487291,
      "node_id": "MDQ6VXNlcjQ0ODcyOTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4487291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/unasuke",
      "html_url": "https://github.com/unasuke",
      "followers_url": "https://api.github.com/users/unasuke/followers",
      "following_url": "https://api.github.com/users/unasuke/following{/other_user}",
      "gists_url": "https://api.github.com/users/unasuke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/unasuke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/unasuke/subscriptions",
      "organizations_url": "https://api.github.com/users/unasuke/orgs",
      "repos_url": "https://api.github.com/users/unasuke/repos",
      "events_url": "https://api.github.com/users/unasuke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/unasuke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T08:48:40Z",
    "updated_at": "2018-12-14T10:31:43Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34705",
      "html_url": "https://github.com/rails/rails/pull/34705",
      "diff_url": "https://github.com/rails/rails/pull/34705.diff",
      "patch_url": "https://github.com/rails/rails/pull/34705.patch"
    },
    "body": "### Summary\r\nDalli uses `ENV[\"MEMCACHE_SERVERS\"]` to default memchached server address when not any address passed in client.new .\r\n\r\nBut ActiveSupport uses `localhost:11211` in `ActiveSupport::Cache::MemCacheStoreTest.build_mem_cache` called\r\nwithout arguments.\r\nIts behavior can't overwrite by environment variable \"MEMCACHE_SERVERS\".\r\n\r\nIf address passed, use this.\r\nElse, check \"MEMCACHE_SERVERS\" then it has value, use this.\r\nIf neither, use nil to initialize `Dalli::Client` .\r\n\r\n### Other Information\r\nI found this problem when run ActiveSupport test by memcached that running other host. \r\n\r\nIn my opinion, ActiveSupport has to respects to Dalli behavior to use MEMCACHE_SERVER environment variable. :wink: \r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34704",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34704/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34704/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34704/events",
    "html_url": "https://github.com/rails/rails/pull/34704",
    "id": 390973639,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4NjE2MzQ2",
    "number": 34704,
    "title": "Remove `report-uri` directive when `nil`",
    "user": {
      "login": "jacobbednarz",
      "id": 283234,
      "node_id": "MDQ6VXNlcjI4MzIzNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/283234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jacobbednarz",
      "html_url": "https://github.com/jacobbednarz",
      "followers_url": "https://api.github.com/users/jacobbednarz/followers",
      "following_url": "https://api.github.com/users/jacobbednarz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jacobbednarz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jacobbednarz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jacobbednarz/subscriptions",
      "organizations_url": "https://api.github.com/users/jacobbednarz/orgs",
      "repos_url": "https://api.github.com/users/jacobbednarz/repos",
      "events_url": "https://api.github.com/users/jacobbednarz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jacobbednarz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-14T05:44:02Z",
    "updated_at": "2018-12-19T02:16:39Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34704",
      "html_url": "https://github.com/rails/rails/pull/34704",
      "diff_url": "https://github.com/rails/rails/pull/34704.diff",
      "patch_url": "https://github.com/rails/rails/pull/34704.patch"
    },
    "body": "Updates the CSP `report_uri` method to only include the `report-uri`\ndirective if the value provided to it isn't `nil`. This allows end users\nto omit the directive if they don't want it outputted.\n\nFixes #34703"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34703",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34703/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34703/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34703/events",
    "html_url": "https://github.com/rails/rails/issues/34703",
    "id": 390967042,
    "node_id": "MDU6SXNzdWUzOTA5NjcwNDI=",
    "number": 34703,
    "title": "report_uri in CSP doesn't allow a \"don't set\" value",
    "user": {
      "login": "viraptor",
      "id": 188063,
      "node_id": "MDQ6VXNlcjE4ODA2Mw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/188063?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/viraptor",
      "html_url": "https://github.com/viraptor",
      "followers_url": "https://api.github.com/users/viraptor/followers",
      "following_url": "https://api.github.com/users/viraptor/following{/other_user}",
      "gists_url": "https://api.github.com/users/viraptor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/viraptor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viraptor/subscriptions",
      "organizations_url": "https://api.github.com/users/viraptor/orgs",
      "repos_url": "https://api.github.com/users/viraptor/repos",
      "events_url": "https://api.github.com/users/viraptor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/viraptor/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 41328116,
        "node_id": "MDU6TGFiZWw0MTMyODExNg==",
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-14T05:05:20Z",
    "updated_at": "2018-12-14T16:40:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nDefine `report_uri` for the CSP configuration which computes value on demand:\r\n```\r\n  policy.report_uri(proc { \"https://example.net\" if some_condition })\r\n``` \r\n\r\n### Expected behavior\r\nWhen the condition isn't true, the `report_uri` directive is skipped.\r\n\r\n### Actual behavior\r\n`report_uri` directive is included and has no value.\r\n\r\n### System configuration\r\n**Rails version**: 5.2.2\r\n\r\n**Ruby version**: 2.5.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34701",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34701/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34701/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34701/events",
    "html_url": "https://github.com/rails/rails/issues/34701",
    "id": 390811023,
    "node_id": "MDU6SXNzdWUzOTA4MTEwMjM=",
    "number": 34701,
    "title": "Passing an Arel::Nodes::Equality instance built with the arel_table method to where fails to find records properly",
    "user": {
      "login": "fractaledmind",
      "id": 5077225,
      "node_id": "MDQ6VXNlcjUwNzcyMjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5077225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fractaledmind",
      "html_url": "https://github.com/fractaledmind",
      "followers_url": "https://api.github.com/users/fractaledmind/followers",
      "following_url": "https://api.github.com/users/fractaledmind/following{/other_user}",
      "gists_url": "https://api.github.com/users/fractaledmind/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fractaledmind/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fractaledmind/subscriptions",
      "organizations_url": "https://api.github.com/users/fractaledmind/orgs",
      "repos_url": "https://api.github.com/users/fractaledmind/repos",
      "events_url": "https://api.github.com/users/fractaledmind/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fractaledmind/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1158302719,
        "node_id": "MDU6TGFiZWwxMTU4MzAyNzE5",
        "url": "https://api.github.com/repos/rails/rails/labels/SQLite",
        "name": "SQLite",
        "color": "ffe7c1",
        "default": false
      },
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-13T18:48:54Z",
    "updated_at": "2018-12-13T22:03:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n<!-- (Guidelines for creating a bug report are [available\r\nhere](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->\r\nSimply run the [test script](https://gist.github.com/fractaledmind/693df573d4d5644ccd71801272bf6af6)\r\n\r\n### Expected behavior\r\n<!-- Tell us what should happen -->\r\n```ruby\r\nModel.where(data: some_model_instance.data)\r\nModel.where(Model.arel_table[:data].eq(some_model_instance.data))\r\nModel.where(Arel::Table.new(Model.table_name)[:data].eq(some_model_instance.data))\r\n```\r\n\r\nshould each find `some_model_instance`.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead -->\r\n\r\nInstead, `Model.where(Model.arel_table[:data].eq(some_model_instance.data))` finds nothing, while the other two do find `some_model_instance`.\r\n\r\n### System configuration\r\n**Rails version**:\r\nconfirmed this issue in both 5.1.6 and 5.2.0\r\n**Ruby version**:\r\n`ruby 2.4.1p111 (2017-03-22 revision 58053) [x86_64-darwin15]`"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34700",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34700/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34700/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34700/events",
    "html_url": "https://github.com/rails/rails/pull/34700",
    "id": 390798049,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4NDgzNjc5",
    "number": 34700,
    "title": "Preserve key order of #fetch_multi",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-13T18:11:15Z",
    "updated_at": "2018-12-27T07:41:15Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34700",
      "html_url": "https://github.com/rails/rails/pull/34700",
      "diff_url": "https://github.com/rails/rails/pull/34700.diff",
      "patch_url": "https://github.com/rails/rails/pull/34700.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/34694.\r\n\r\nPreserves order of keys passed to `#fetch_multi`.\r\n\r\nIf for some reason the current functionality is intended, I'll refactor this PR to document the behaviour.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34696",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34696/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34696/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34696/events",
    "html_url": "https://github.com/rails/rails/issues/34696",
    "id": 390659050,
    "node_id": "MDU6SXNzdWUzOTA2NTkwNTA=",
    "number": 34696,
    "title": "Parent models not validating children as expected",
    "user": {
      "login": "kjdchapman",
      "id": 429326,
      "node_id": "MDQ6VXNlcjQyOTMyNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/429326?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kjdchapman",
      "html_url": "https://github.com/kjdchapman",
      "followers_url": "https://api.github.com/users/kjdchapman/followers",
      "following_url": "https://api.github.com/users/kjdchapman/following{/other_user}",
      "gists_url": "https://api.github.com/users/kjdchapman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kjdchapman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kjdchapman/subscriptions",
      "organizations_url": "https://api.github.com/users/kjdchapman/orgs",
      "repos_url": "https://api.github.com/users/kjdchapman/repos",
      "events_url": "https://api.github.com/users/kjdchapman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kjdchapman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107190,
        "node_id": "MDU6TGFiZWwxMDcxOTA=",
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF",
        "default": false
      },
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-13T12:34:33Z",
    "updated_at": "2018-12-17T13:08:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Overview\r\nI'm seeing behaviour from ActiveModels that I don't understand. My understanding is trying to `save` a model will:\r\n- validate the model itself\r\n- validate any related children\r\n- fail to save if either of these validations fail.\r\n\r\nHowever, I am able to save a model that has children that _should_ fail validation.\r\n\r\n### Steps to reproduce\r\nI've not been able to recreate this problem in isolation from our app... but it's open source, so you can grab it and see for yourself.\r\n\r\nI've got a PR open here - https://github.com/alphagov/govwifi-admin/pull/370. The relevant part is [the `validates_associated` attribute on our Location model](https://github.com/alphagov/govwifi-admin/pull/370/files#diff-639fc2bd424698d6c788942dd1a1784f) - switching `validates_associated` on and off will cause one of two test groups to fail.\r\n\r\n### Expected behaviour\r\nEither `validates_associated` is not necessary, or including it does not cause a timeout.\r\n\r\nNote that the timeout only happens if there are already many related models. I suspect it's an inefficient uniqueness-checking query rather than an infinite loop (as some of the docs on `validates_associated` warn about).\r\n\r\n### Actual behaviour\r\nIncluding `validates_associated` causes the parent model to hang on `save`.\r\nExcluding `validates_associated` allows a parent model to be saved with invalid children.\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.2.2\r\n\r\n**Ruby version**:\r\n2.5.3"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34694",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34694/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34694/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34694/events",
    "html_url": "https://github.com/rails/rails/issues/34694",
    "id": 390430904,
    "node_id": "MDU6SXNzdWUzOTA0MzA5MDQ=",
    "number": 34694,
    "title": "Rails.cache.fetch_multi order of returned keys is non-deterministic",
    "user": {
      "login": "adamlogic",
      "id": 372,
      "node_id": "MDQ6VXNlcjM3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/372?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamlogic",
      "html_url": "https://github.com/adamlogic",
      "followers_url": "https://api.github.com/users/adamlogic/followers",
      "following_url": "https://api.github.com/users/adamlogic/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamlogic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamlogic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamlogic/subscriptions",
      "organizations_url": "https://api.github.com/users/adamlogic/orgs",
      "repos_url": "https://api.github.com/users/adamlogic/repos",
      "events_url": "https://api.github.com/users/adamlogic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamlogic/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-12T22:11:15Z",
    "updated_at": "2018-12-13T18:09:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure if this is a bug or expected behavior, but I think it's a gotcha nonetheless. If not a bug, it should probably be documented.\r\n\r\n### Steps to reproduce\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", github: \"rails/rails\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @cache = ActiveSupport::Cache.lookup_store(:memory_store)\r\n  end\r\n\r\n  def test_fetch_multi_order_with_partial_miss\r\n    keys = @cache.fetch_multi(*%w(1 3 5)) { |key| key.to_i + 10 }.keys\r\n    assert_equal %w(1 3 5), keys\r\n\r\n    keys = @cache.fetch_multi(*%w(1 2 3 4 5)) { |key| key.to_i + 10 }.keys\r\n    assert_equal %w(1 2 3 4 5), keys\r\n    # Actual: 1 3 5 2 4 (cache hits followed by cache misses)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expected the returned keys to be in the same order they were passed to `fetch_multi`.\r\n\r\n### Actual behavior\r\n\r\nThe order of the returned keys depends on cache hits and misses. The hits come first with the misses appended to the end.\r\n\r\n### System configuration\r\n**Rails version**: master\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34692",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34692/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34692/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34692/events",
    "html_url": "https://github.com/rails/rails/pull/34692",
    "id": 390379893,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM4MTU5Mjgx",
    "number": 34692,
    "title": "Move MailDeliveryJob default to 6.0 defaults",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107188,
        "node_id": "MDU6TGFiZWwxMDcxODg=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
        "name": "actionmailer",
        "color": "8B00FC",
        "default": false
      },
      {
        "id": 107195,
        "node_id": "MDU6TGFiZWwxMDcxOTU=",
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 24,
      "closed_issues": 54,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-01-04T19:46:54Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2018-12-12T19:43:02Z",
    "updated_at": "2019-01-04T20:56:34Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34692",
      "html_url": "https://github.com/rails/rails/pull/34692",
      "diff_url": "https://github.com/rails/rails/pull/34692.diff",
      "patch_url": "https://github.com/rails/rails/pull/34692.patch"
    },
    "body": "### Summary\r\n\r\nFollowup on https://github.com/rails/rails/pull/34591. This moves the setting of using `ActionMailer::MailDeliveryJob` as the default delivery job to defaults only applied to new 6.0 apps. Upgraded apps need to upgrade this manually to avoid having issues on deployment discussed [here](https://github.com/rails/rails/pull/34591#issuecomment-444157404).\r\n\r\ncc @rafaelfranca, @Edouard-chin, @eileencodes \r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34687",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34687/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34687/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34687/events",
    "html_url": "https://github.com/rails/rails/issues/34687",
    "id": 390255415,
    "node_id": "MDU6SXNzdWUzOTAyNTU0MTU=",
    "number": 34687,
    "title": "ActiveStorage returns 404 using local disk Filter chain halted as :set_blob rendered or redirected",
    "user": {
      "login": "srinivasan-sandy",
      "id": 39064144,
      "node_id": "MDQ6VXNlcjM5MDY0MTQ0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/39064144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srinivasan-sandy",
      "html_url": "https://github.com/srinivasan-sandy",
      "followers_url": "https://api.github.com/users/srinivasan-sandy/followers",
      "following_url": "https://api.github.com/users/srinivasan-sandy/following{/other_user}",
      "gists_url": "https://api.github.com/users/srinivasan-sandy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srinivasan-sandy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srinivasan-sandy/subscriptions",
      "organizations_url": "https://api.github.com/users/srinivasan-sandy/orgs",
      "repos_url": "https://api.github.com/users/srinivasan-sandy/repos",
      "events_url": "https://api.github.com/users/srinivasan-sandy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srinivasan-sandy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 664533972,
        "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
        "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
        "name": "activestorage",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-12T14:40:16Z",
    "updated_at": "2018-12-27T10:36:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nmodule Providers\r\n  class AppointmentsController < BaseController\r\n    require 'action_view'\r\n    before_action :create_room, only: %i[call]\r\n    skip_before_action :verify_authenticity_token, only: %i[update_session_notes end_call]\r\n\r\n    def new\r\n      @times = AppointmentTime.new.times\r\n      @patient_options = UserDecorator.wrap(current_user.program_provider.patients).map { |u| [u.name, u.id, {'data-imagesrc'=>view_context.url_for(u.profile_picture) }] }\r\n\r\n      render \"providers/appointments/new\", layout: \"modal\"\r\n    end\r\n\r\nAs we can see that signed_id is getting lowercased:\r\n\r\n{\"data-imagesrc\"=>\"/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7e673e7609a8deb0857ae37a155b8c8acb1ab6b5/team4.jpg\"}\r\n\r\nStarted GET \"/rails/active_storage/blobs/eyjfcmfpbhmionsibwvzc2fnzsi6ikjbahbcdz09iiwizxhwijpudwxslcjwdxiioijibg9ix2lkin19--7e673e7609a8deb0857ae37a155b8c8acb1ab6b5/team4.jpg\" for 127.0.0.1 at 2018-12-12 13:05:48 +0530\r\nProcessing by ActiveStorage::BlobsController#show as JPEG\r\n  Parameters: {\"signed_id\"=>\"eyjfcmfpbhmionsibwvzc2fnzsi6ikjbahbcdz09iiwizxhwijpudwxslcjwdxiioijibg9ix2lkin19--7e673e7609a8deb0857ae37a155b8c8acb1ab6b5\", \"filename\"=>\"team4\"}\r\nFilter chain halted as :set_blob rendered or redirected\r\nCompleted 404 Not Found in 1ms (ActiveRecord: 0.0ms)\r\n\r\nActiveStorage::Blob.find_signed(\"eyjfcmfpbhmionsibwvzc2fnzsi6ikjbahbcdz09iiwizxhwijpudwxslcjwdxiioijibg9ix2lkin19--7e673e7609a8deb0857ae37a155b8c8acb1ab6b5\")\r\nActiveSupport::MessageVerifier::InvalidSignature: ActiveSupport::MessageVerifier::InvalidSignature\r\n\r\nActiveStorage::Blob.find_signed(\"eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCdz09IiwiZXhwIjpudWxsLCJwdXIiOiJibG9iX2lkIn19--7e673e7609a8deb0857ae37a155b8c8acb1ab6b5\")\r\n  ActiveStorage::Blob Load (0.5ms)  SELECT  \"active_storage_blobs\".* FROM \"active_storage_blobs\" WHERE \"active_storage_blobs\".\"id\" = $1 LIMIT $2  [[\"id\", 2], [\"LIMIT\", 1]]\r\n=> #<ActiveStorage::Blob:0x00007fed559b7dd8\r\n id: 2,\r\n key: \"Y65yXrtkb7qARXPmCiCTBXTv\",\r\n filename: \"team4.jpg\",\r\n content_type: \"image/jpeg\",\r\n metadata: {\"identified\"=>true},\r\n byte_size: 127764,\r\n checksum: \"59SXcK/eyUpK6lTeuxm7hg==\",\r\n created_at: Tue, 11 Dec 2018 12:49:45 UTC +00:00,\r\n archived: false,\r\n archived_at: nil>\r\n\r\n### Expected behavior\r\nImage should load without 404. \r\n\r\n### Actual behavior\r\nErrors with 404 Filter chain halted as :set_blob rendered or redirected.\r\n### System configuration\r\n**Rails version**:\r\n~> 5.2.0\r\n**Ruby version**:\r\n2.5.1"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34683",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34683/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34683/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34683/events",
    "html_url": "https://github.com/rails/rails/pull/34683",
    "id": 390117827,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3OTUyMzY0",
    "number": 34683,
    "title": "removed week check from parts",
    "user": {
      "login": "abhisheksarka",
      "id": 4833588,
      "node_id": "MDQ6VXNlcjQ4MzM1ODg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4833588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abhisheksarka",
      "html_url": "https://github.com/abhisheksarka",
      "followers_url": "https://api.github.com/users/abhisheksarka/followers",
      "following_url": "https://api.github.com/users/abhisheksarka/following{/other_user}",
      "gists_url": "https://api.github.com/users/abhisheksarka/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abhisheksarka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abhisheksarka/subscriptions",
      "organizations_url": "https://api.github.com/users/abhisheksarka/orgs",
      "repos_url": "https://api.github.com/users/abhisheksarka/repos",
      "events_url": "https://api.github.com/users/abhisheksarka/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abhisheksarka/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-12-12T08:38:36Z",
    "updated_at": "2019-01-04T13:26:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34683",
      "html_url": "https://github.com/rails/rails/pull/34683",
      "diff_url": "https://github.com/rails/rails/pull/34683.diff",
      "patch_url": "https://github.com/rails/rails/pull/34683.patch"
    },
    "body": "### Summary\r\n\r\nReferencing this issue https://github.com/rails/rails/issues/34655, removed the week check"
  }
]