[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34679",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34679/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34679/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34679/events",
    "html_url": "https://github.com/rails/rails/pull/34679",
    "id": 389920017,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3ODAxNTIx",
    "number": 34679,
    "title": "Fixes unscoping the where clause when it has an array `default_scope`…",
    "user": {
      "login": "jemminger",
      "id": 2272,
      "node_id": "MDQ6VXNlcjIyNzI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jemminger",
      "html_url": "https://github.com/jemminger",
      "followers_url": "https://api.github.com/users/jemminger/followers",
      "following_url": "https://api.github.com/users/jemminger/following{/other_user}",
      "gists_url": "https://api.github.com/users/jemminger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jemminger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jemminger/subscriptions",
      "organizations_url": "https://api.github.com/users/jemminger/orgs",
      "repos_url": "https://api.github.com/users/jemminger/repos",
      "events_url": "https://api.github.com/users/jemminger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jemminger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-11T19:34:04Z",
    "updated_at": "2018-12-20T17:48:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34679",
      "html_url": "https://github.com/rails/rails/pull/34679",
      "diff_url": "https://github.com/rails/rails/pull/34679.diff",
      "patch_url": "https://github.com/rails/rails/pull/34679.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/30967\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34678",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34678/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34678/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34678/events",
    "html_url": "https://github.com/rails/rails/pull/34678",
    "id": 389916374,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3Nzk4NjE3",
    "number": 34678,
    "title": "Add connect, disconnect, subscribe, unsubscribe ActiveSupport instrum…",
    "user": {
      "login": "xlts",
      "id": 11663627,
      "node_id": "MDQ6VXNlcjExNjYzNjI3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11663627?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xlts",
      "html_url": "https://github.com/xlts",
      "followers_url": "https://api.github.com/users/xlts/followers",
      "following_url": "https://api.github.com/users/xlts/following{/other_user}",
      "gists_url": "https://api.github.com/users/xlts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xlts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xlts/subscriptions",
      "organizations_url": "https://api.github.com/users/xlts/orgs",
      "repos_url": "https://api.github.com/users/xlts/repos",
      "events_url": "https://api.github.com/users/xlts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xlts/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 300028327,
        "node_id": "MDU6TGFiZWwzMDAwMjgzMjc=",
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-11T19:24:19Z",
    "updated_at": "2018-12-18T17:48:54Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34678",
      "html_url": "https://github.com/rails/rails/pull/34678",
      "diff_url": "https://github.com/rails/rails/pull/34678.diff",
      "patch_url": "https://github.com/rails/rails/pull/34678.patch"
    },
    "body": "…entations to Action Cable\r\n\r\n### Summary\r\n\r\nAs per [this post in Google Groups](https://groups.google.com/forum/?fromgroups#!topic/rubyonrails-core/DoR6K5yfqm0), the PR adds `ActiveSupport::Notifications` instrumentations to `connect`, `disconnect`, `subscribe` and `unsubscribe` calls in Action Cable. While actions such as `perform_action` or `transmit_subscription_confirmation` are instrumented, it seems natural to have more of them around other \"important\" places in code in order to e.g. provide new logging options handled by `ActiveSupport::LogSubscriber` or other notifications consumers."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34671",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34671/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34671/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34671/events",
    "html_url": "https://github.com/rails/rails/pull/34671",
    "id": 389547041,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NTEzNTE4",
    "number": 34671,
    "title": "Fix acceptance validator module inclusion leak",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107190,
        "node_id": "MDU6TGFiZWwxMDcxOTA=",
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "node_id": "MDQ6VXNlcjQ3ODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-11T00:34:39Z",
    "updated_at": "2018-12-18T20:51:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34671",
      "html_url": "https://github.com/rails/rails/pull/34671",
      "diff_url": "https://github.com/rails/rails/pull/34671.diff",
      "patch_url": "https://github.com/rails/rails/pull/34671.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/34659.\r\n\r\nFix incremental inclusion using acceptance validator's lazy attributes module. This patch may not be necessary as I can't think of a real world example where the current code would cause issues (aside from minuscule memory bloat). Regardless, this adds comparison to lazy attribute definitions so we don't include them more than once.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34667",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34667/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34667/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34667/events",
    "html_url": "https://github.com/rails/rails/pull/34667",
    "id": 389512864,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3NDg2NjI3",
    "number": 34667,
    "title": "Compare transaction records by identity when adding to callback list",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "node_id": "MDQ6VXNlcjQ3ODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-12-10T22:22:16Z",
    "updated_at": "2018-12-20T03:54:43Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34667",
      "html_url": "https://github.com/rails/rails/pull/34667",
      "diff_url": "https://github.com/rails/rails/pull/34667.diff",
      "patch_url": "https://github.com/rails/rails/pull/34667.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/34644.\r\n\r\n`Array#uniq` favours the first result in the array. Sometimes this backfires when more than one of the same ActiveRecord object is added to the callback list of a transaction with different states. I think we should be using the last (latest) record as opposed to the first one.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34661",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34661/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34661/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34661/events",
    "html_url": "https://github.com/rails/rails/issues/34661",
    "id": 389115544,
    "node_id": "MDU6SXNzdWUzODkxMTU1NDQ=",
    "number": 34661,
    "title": "add_timestamps works on ActiveRecord::Migration[4.2], but not in 5.0 or 5.1",
    "user": {
      "login": "is-ma",
      "id": 14076090,
      "node_id": "MDQ6VXNlcjE0MDc2MDkw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/14076090?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/is-ma",
      "html_url": "https://github.com/is-ma",
      "followers_url": "https://api.github.com/users/is-ma/followers",
      "following_url": "https://api.github.com/users/is-ma/following{/other_user}",
      "gists_url": "https://api.github.com/users/is-ma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/is-ma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/is-ma/subscriptions",
      "organizations_url": "https://api.github.com/users/is-ma/orgs",
      "repos_url": "https://api.github.com/users/is-ma/repos",
      "events_url": "https://api.github.com/users/is-ma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/is-ma/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1158302719,
        "node_id": "MDU6TGFiZWwxMTU4MzAyNzE5",
        "url": "https://api.github.com/repos/rails/rails/labels/SQLite",
        "name": "SQLite",
        "color": "ffe7c1",
        "default": false
      },
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 131864,
        "node_id": "MDU6TGFiZWwxMzE4NjQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/third%20party%20issue",
        "name": "third party issue",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-10T03:04:59Z",
    "updated_at": "2018-12-11T20:11:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n`rails generate migration CreateBeer name brand`\r\n`rails db:migrate`\r\n\r\n`rails generate migration AddTimestampsToBeer`\r\n\r\n```ruby\r\nclass AddTimestampsToBeer < ActiveRecord::Migration[5.1]\r\n  def change\r\n    add_timestamps :beers\r\n  end\r\nend\r\n```\r\n`rails db:migrate`\r\n\r\n### Expected behavior\r\nIt should make the migration.\r\n\r\n### Actual behavior\r\nSQLite3::SQLException: Cannot add a NOT NULL column with default value NULL: ALTER TABLE \"beers\" ADD \"created_at\" datetime NOT NULL\r\n\r\n### But it works when...\r\n- If I change the number to `ActiveRecord::Migration[5.0]`, it fails again (same error).\r\n- If I change the number to `ActiveRecord::Migration[4.2]`, **it succeded.**\r\n\r\n> == 20181210024827 AddTimestampsToBeer: migrating ==============================\r\n-- add_timestamps(:beers, {:null=>true})\r\n   -> 0.0009s\r\n== 20181210024827 AddTimestampsToBeer: migrated (0.0009s) =====================\r\n\r\n\r\n### System configuration\r\n**Rails version**: 5.1.6\r\n\r\n**Ruby version**: 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin14]\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34659",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34659/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34659/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34659/events",
    "html_url": "https://github.com/rails/rails/issues/34659",
    "id": 389067416,
    "node_id": "MDU6SXNzdWUzODkwNjc0MTY=",
    "number": 34659,
    "title": "A SystemStackError caused by ActiveModel::Validations::AcceptanceValidator",
    "user": {
      "login": "mmichaa",
      "id": 68866,
      "node_id": "MDQ6VXNlcjY4ODY2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/68866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmichaa",
      "html_url": "https://github.com/mmichaa",
      "followers_url": "https://api.github.com/users/mmichaa/followers",
      "following_url": "https://api.github.com/users/mmichaa/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmichaa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmichaa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmichaa/subscriptions",
      "organizations_url": "https://api.github.com/users/mmichaa/orgs",
      "repos_url": "https://api.github.com/users/mmichaa/repos",
      "events_url": "https://api.github.com/users/mmichaa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmichaa/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107190,
        "node_id": "MDU6TGFiZWwxMDcxOTA=",
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-09T21:43:15Z",
    "updated_at": "2018-12-10T22:33:46Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\n```ruby\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  gem \"rails\", \"~> 5.2\" # github: \"rails/rails\"\r\n  gem \"pry\"\r\nend\r\n\r\nrequire \"active_support\"\r\nrequire \"active_support/core_ext/object/blank\"\r\nrequire \"minitest/autorun\"\r\n\r\nrequire \"active_model\"\r\n\r\nclass AcceptanceValidatorLazilyDefineAttributesBugTest < Minitest::Test\r\n  def test_do_not_add_a_ancestor_to_the_model_class\r\n    model_klass = Class.new do\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :privacy_policy\r\n    end\r\n\r\n    model = model_klass.new\r\n\r\n    model_klass_ancestors_count_before = model_klass.ancestors.count\r\n    model.validates_acceptance_of :privacy_policy\r\n    model_klass_ancestors_count_after = model_klass.ancestors.count\r\n\r\n    assert_equal model_klass_ancestors_count_before, model_klass_ancestors_count_after\r\n  end\r\n\r\n  def test_do_not_raise_a_SystemStackError_for_undefined_methods\r\n    model_klass = Class.new do\r\n      include ActiveModel::Model\r\n\r\n      attr_accessor :privacy_policy\r\n    end\r\n\r\n    model = model_klass.new\r\n\r\n    8_192.times do\r\n      model.validates_acceptance_of :privacy_policy\r\n    end\r\n\r\n    assert_raises NoMethodError do\r\n      model.undefined_method\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n### Result\r\n\r\n```\r\n# Running:\r\n\r\nF\r\n\r\nFailure:\r\nAcceptanceValidatorLazilyDefineAttributesBugTest#test_do_not_add_a_ancestor_to_the_model_class [demo.rb:34]:\r\nExpected: 16\r\n  Actual: 17\r\n\r\n\r\nbin/rails test demo.rb:21\r\n\r\nF\r\n\r\nFailure:\r\nAcceptanceValidatorLazilyDefineAttributesBugTest#test_do_not_raise_a_SystemStackError_for_undefined_methods [demo.rb:50]:\r\n[NoMethodError] exception expected, not\r\nClass: <SystemStackError>\r\nMessage: <\"stack level too deep\">\r\n---Backtrace---\r\n\r\n---------------\r\n\r\n\r\nbin/rails test demo.rb:37\r\n\r\n\r\n\r\nFinished in 3.075060s, 0.6504 runs/s, 0.6504 assertions/s.\r\n2 runs, 2 assertions, 2 failures, 0 errors, 0 skips\r\n```\r\n\r\n### Expected behavior\r\n\r\nA validates_acceptance_of call on a model instance should not modify the model's class. From my point of view this is an absolutly unexpected behaviour.\r\n\r\n### Actual behavior\r\n\r\na) Every validates_acceptance_of call on the model instance adds a LazilyDefineAttributes instance to the ancestors of the model class.\r\n\r\nb) After some thousands of validates_acceptance_of calls it results in a SystemStackError when running into method_missing or respond_to_missing?(when not matching the attribute_definition) calls.\r\n\r\n### System configuration\r\n\r\n**Rails version**: 5.2.2\r\n\r\n**Ruby version**: 2.5.3"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34656",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34656/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34656/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34656/events",
    "html_url": "https://github.com/rails/rails/pull/34656",
    "id": 388964383,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM3MDk0Mzgw",
    "number": 34656,
    "title": "Keep part when scope option has value",
    "user": {
      "login": "albertoalmagro",
      "id": 671550,
      "node_id": "MDQ6VXNlcjY3MTU1MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/671550?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertoalmagro",
      "html_url": "https://github.com/albertoalmagro",
      "followers_url": "https://api.github.com/users/albertoalmagro/followers",
      "following_url": "https://api.github.com/users/albertoalmagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertoalmagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertoalmagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertoalmagro/subscriptions",
      "organizations_url": "https://api.github.com/users/albertoalmagro/orgs",
      "repos_url": "https://api.github.com/users/albertoalmagro/repos",
      "events_url": "https://api.github.com/users/albertoalmagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertoalmagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-12-08T22:12:06Z",
    "updated_at": "2018-12-27T00:31:58Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34656",
      "html_url": "https://github.com/rails/rails/pull/34656",
      "diff_url": "https://github.com/rails/rails/pull/34656.diff",
      "patch_url": "https://github.com/rails/rails/pull/34656.patch"
    },
    "body": "### Summary\r\nWhen a route was defined within an optional scope, if that route didn't take parameters the scope was lost when using path helpers. This patch ensures scope is kept both when the route takes parameters or when it doesn't.\r\n\r\nFixes #33219 \r\n\r\nr? @gmcgibbon "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34655",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34655/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34655/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34655/events",
    "html_url": "https://github.com/rails/rails/issues/34655",
    "id": 388843812,
    "node_id": "MDU6SXNzdWUzODg4NDM4MTI=",
    "number": 34655,
    "title": "Conflict with ISO8601 serializer and parser on ActiveSupport::Duration",
    "user": {
      "login": "crashtech",
      "id": 1782535,
      "node_id": "MDQ6VXNlcjE3ODI1MzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1782535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/crashtech",
      "html_url": "https://github.com/crashtech",
      "followers_url": "https://api.github.com/users/crashtech/followers",
      "following_url": "https://api.github.com/users/crashtech/following{/other_user}",
      "gists_url": "https://api.github.com/users/crashtech/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/crashtech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/crashtech/subscriptions",
      "organizations_url": "https://api.github.com/users/crashtech/orgs",
      "repos_url": "https://api.github.com/users/crashtech/repos",
      "events_url": "https://api.github.com/users/crashtech/events{/privacy}",
      "received_events_url": "https://api.github.com/users/crashtech/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-07T22:59:12Z",
    "updated_at": "2018-12-10T22:27:52Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n```ruby\r\nduration = ActiveSupport::Duration.build(1000000)\r\nduration_iso = duration.iso8601\r\nActiveSupport::Duration.parse(duration_iso)\r\n```\r\n\r\n### Expected behavior\r\n```ruby\r\n{:weeks => 1, :days=>4, :hours=>13, :minutes=>46, :seconds=>40}\r\n```\r\n\r\n### Actual behavior\r\n```ruby\r\nActiveSupport::Duration::ISO8601Parser::ParsingError: Invalid ISO 8601 duration: \"P1W4DT13H46M40S\" mixing weeks with other date parts not allowed\r\n```\r\n\r\n### System configuration\r\nRails 5.2.1\r\nRuby 2.3.1\r\n\r\nThere's an Exception prohibiting mixing weeks with other date pieces. Although it seems a correct Exception, it makes the process confusing since I could measure a duration by \"2 months and 1 week\" in any other aspect, and it would also provide a correct behavior on ` ActiveSupport::Duration#parse`\r\n\r\nThe solutions simply remove the exception and allow it to move forward.\r\nhttps://github.com/rails/rails/blob/master/activesupport/lib/active_support/duration/iso8601_parser.rb#L106"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34644",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34644/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34644/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34644/events",
    "html_url": "https://github.com/rails/rails/issues/34644",
    "id": 388442086,
    "node_id": "MDU6SXNzdWUzODg0NDIwODY=",
    "number": 34644,
    "title": "after_commit callback does not fire if the same record got updated with a different reference in the same transaction block",
    "user": {
      "login": "marunbai",
      "id": 3632255,
      "node_id": "MDQ6VXNlcjM2MzIyNTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3632255?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marunbai",
      "html_url": "https://github.com/marunbai",
      "followers_url": "https://api.github.com/users/marunbai/followers",
      "following_url": "https://api.github.com/users/marunbai/following{/other_user}",
      "gists_url": "https://api.github.com/users/marunbai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marunbai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marunbai/subscriptions",
      "organizations_url": "https://api.github.com/users/marunbai/orgs",
      "repos_url": "https://api.github.com/users/marunbai/repos",
      "events_url": "https://api.github.com/users/marunbai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marunbai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "gmcgibbon",
        "id": 5162312,
        "node_id": "MDQ6VXNlcjUxNjIzMTI=",
        "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmcgibbon",
        "html_url": "https://github.com/gmcgibbon",
        "followers_url": "https://api.github.com/users/gmcgibbon/followers",
        "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
        "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
        "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
        "repos_url": "https://api.github.com/users/gmcgibbon/repos",
        "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-06T23:29:13Z",
    "updated_at": "2018-12-10T20:23:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\nHere is the set up:\r\n\r\nThere are 2 simple models. Cat and Dog. Cat has a name and Dog has a name and cat_id.\r\n\r\nCat has an after_update callback that will update all its dogs. \r\nDog has an after_commit callback that will print `dog barks` on destroy.\r\n\r\nThe dog callback will not fire if they got called in the same transaction because `ActiveRecord::ConnectionAdapters::Transaction#commit_records` method will do uniq on records. Sometimes, same record could get pushed into the transaction `records` array with different state multiple times, like one destroyed and one persisted.\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.2.1\"\r\n  gem \"sqlite3\"\r\n  gem \"pry\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\nrequire \"pry\"\r\n\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :cats do |t|\r\n    t.string :name\r\n\r\n    t.timestamps\r\n  end\r\n\r\n  create_table :dogs do |t|\r\n    t.string :name\r\n    t.integer :cat_id\r\n\r\n    t.timestamps\r\n  end\r\nend\r\n\r\nclass Cat < ActiveRecord::Base\r\n  has_many :dogs\r\n\r\n  after_update :update_dogs\r\n\r\n  def update_name(name)\r\n    self.name = name\r\n\r\n    save!\r\n  end\r\n\r\n  def update_dogs\r\n    dogs.each do |dog|\r\n      dog.name = 'new dog'\r\n      dog.save!\r\n    end\r\n  end\r\nend\r\n\r\nclass Dog < ActiveRecord::Base\r\n  belongs_to :cat\r\n\r\n  after_commit :bark, on: :destroy\r\n\r\n  def bark\r\n    puts \"dog barks\"\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_stuff\r\n    Cat.create(:name => 'cat')\r\n    dog = Dog.new(:name => 'dog_2')\r\n    dog.cat = Cat.last\r\n    dog.save\r\n\r\n    puts'----------------------------------'\r\n    puts'Dog should bark in this example: '\r\n    puts\r\n\r\n    Dog.transaction do\r\n      dog = Dog.last\r\n      cat = dog.cat\r\n      cat.update_name('cat 2')\r\n\r\n      dog.destroy\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nafter_destroy_commit callback `bark` should fire after `dog.destroy` in the transaction above.\r\n\r\n```\r\nD, [2018-12-07T10:56:59.999822 #33390] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2018-12-07T10:57:00.000744 #33390] DEBUG -- :   Dog Load (0.2ms)  SELECT  \"dogs\".* FROM \"dogs\" ORDER BY \"dogs\".\"id\" DESC LIMIT ?  [[\"LIMIT\", 1]]\r\nD, [2018-12-07T10:57:00.008017 #33390] DEBUG -- :   Cat Load (0.1ms)  SELECT  \"cats\".* FROM \"cats\" WHERE \"cats\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 1]]\r\nD, [2018-12-07T10:57:00.009899 #33390] DEBUG -- :   Cat Update (0.1ms)  UPDATE \"cats\" SET \"name\" = ?, \"updated_at\" = ? WHERE \"cats\".\"id\" = ?  [[\"name\", \"cat 2\"], [\"updated_at\", \"2018-12-07 15:57:00.008533\"], [\"id\", 1]]\r\nD, [2018-12-07T10:57:00.015809 #33390] DEBUG -- :   Dog Load (0.1ms)  SELECT \"dogs\".* FROM \"dogs\" WHERE \"dogs\".\"cat_id\" = ?  [[\"cat_id\", 1]]\r\nD, [2018-12-07T10:57:00.017123 #33390] DEBUG -- :   Dog Update (0.2ms)  UPDATE \"dogs\" SET \"name\" = ?, \"updated_at\" = ? WHERE \"dogs\".\"id\" = ?  [[\"name\", \"new dog\"], [\"updated_at\", \"2018-12-07 15:57:00.016259\"], [\"id\", 1]]\r\nD, [2018-12-07T10:57:00.018520 #33390] DEBUG -- :   Dog Destroy (0.2ms)  DELETE FROM \"dogs\" WHERE \"dogs\".\"id\" = ?  [[\"id\", 1]]\r\nD, [2018-12-07T10:57:00.018953 #33390] DEBUG -- :    (0.0ms)  commit transaction\r\ndog barks\r\n```\r\n\r\n### Actual behavior\r\n\r\nafter_destroy_commit callback `bark` does not fire in the example\r\n\r\n```\r\nD, [2018-12-07T10:56:59.999822 #33390] DEBUG -- :    (0.0ms)  begin transaction\r\nD, [2018-12-07T10:57:00.000744 #33390] DEBUG -- :   Dog Load (0.2ms)  SELECT  \"dogs\".* FROM \"dogs\" ORDER BY \"dogs\".\"id\" DESC LIMIT ?  [[\"LIMIT\", 1]]\r\nD, [2018-12-07T10:57:00.008017 #33390] DEBUG -- :   Cat Load (0.1ms)  SELECT  \"cats\".* FROM \"cats\" WHERE \"cats\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 1]]\r\nD, [2018-12-07T10:57:00.009899 #33390] DEBUG -- :   Cat Update (0.1ms)  UPDATE \"cats\" SET \"name\" = ?, \"updated_at\" = ? WHERE \"cats\".\"id\" = ?  [[\"name\", \"cat 2\"], [\"updated_at\", \"2018-12-07 15:57:00.008533\"], [\"id\", 1]]\r\nD, [2018-12-07T10:57:00.015809 #33390] DEBUG -- :   Dog Load (0.1ms)  SELECT \"dogs\".* FROM \"dogs\" WHERE \"dogs\".\"cat_id\" = ?  [[\"cat_id\", 1]]\r\nD, [2018-12-07T10:57:00.017123 #33390] DEBUG -- :   Dog Update (0.2ms)  UPDATE \"dogs\" SET \"name\" = ?, \"updated_at\" = ? WHERE \"dogs\".\"id\" = ?  [[\"name\", \"new dog\"], [\"updated_at\", \"2018-12-07 15:57:00.016259\"], [\"id\", 1]]\r\nD, [2018-12-07T10:57:00.018520 #33390] DEBUG -- :   Dog Destroy (0.2ms)  DELETE FROM \"dogs\" WHERE \"dogs\".\"id\" = ?  [[\"id\", 1]]\r\nD, [2018-12-07T10:57:00.018953 #33390] DEBUG -- :    (0.0ms)  commit transaction\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.1\r\n\r\n**Ruby version**: 2.2.4\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34642",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34642/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34642/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34642/events",
    "html_url": "https://github.com/rails/rails/pull/34642",
    "id": 388381507,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2NjU5MTAz",
    "number": 34642,
    "title": "HashWithIndifferentAccess#initialize performance improvement",
    "user": {
      "login": "azimux",
      "id": 17424,
      "node_id": "MDQ6VXNlcjE3NDI0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17424?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azimux",
      "html_url": "https://github.com/azimux",
      "followers_url": "https://api.github.com/users/azimux/followers",
      "following_url": "https://api.github.com/users/azimux/following{/other_user}",
      "gists_url": "https://api.github.com/users/azimux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azimux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azimux/subscriptions",
      "organizations_url": "https://api.github.com/users/azimux/orgs",
      "repos_url": "https://api.github.com/users/azimux/repos",
      "events_url": "https://api.github.com/users/azimux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azimux/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-06T20:18:51Z",
    "updated_at": "2018-12-07T02:56:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34642",
      "html_url": "https://github.com/rails/rails/pull/34642",
      "diff_url": "https://github.com/rails/rails/pull/34642.diff",
      "patch_url": "https://github.com/rails/rails/pull/34642.patch"
    },
    "body": "Rails 4 -> Rails 5 introduced a #to_hash call in HashWithIndifferentAccess#initialize.  I am assuming that the intention of this `#to_hash` call is to guarantee we have something that responds to `:default` and `:default_proc`.  This can be an expensive operation for very large HashWithIndifferentAccess objects.  This was introduced here: https://github.com/rails/rails/commit/6e574e8a11635ec4e579e5b247f6492b9bdc9279\r\n\r\nThis commit bypasses this #to_hash call if it is already a Hash, giving a performance boost to the copy constructor of huge HWIAs."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34640",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34640/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34640/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34640/events",
    "html_url": "https://github.com/rails/rails/issues/34640",
    "id": 388306739,
    "node_id": "MDU6SXNzdWUzODgzMDY3Mzk=",
    "number": 34640,
    "title": "ActionDispatch::IntegrationTest#url_options are not being reset within tests",
    "user": {
      "login": "whiny-nil",
      "id": 208446,
      "node_id": "MDQ6VXNlcjIwODQ0Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/208446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whiny-nil",
      "html_url": "https://github.com/whiny-nil",
      "followers_url": "https://api.github.com/users/whiny-nil/followers",
      "following_url": "https://api.github.com/users/whiny-nil/following{/other_user}",
      "gists_url": "https://api.github.com/users/whiny-nil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whiny-nil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whiny-nil/subscriptions",
      "organizations_url": "https://api.github.com/users/whiny-nil/orgs",
      "repos_url": "https://api.github.com/users/whiny-nil/repos",
      "events_url": "https://api.github.com/users/whiny-nil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whiny-nil/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-06T16:59:37Z",
    "updated_at": "2018-12-11T01:10:09Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n* Assume you have a `FoosController` and a `BarsController`, and nested routes set up such that foos_url() and foo_bars_url() exist\r\n* create a test like:\r\n\r\n```\r\nclass MyIntegrationTest < ActionDispatch::IntegrationTest\r\n  it 'should do some stuff' do\r\n    post foos_url(foo_id: '123'), params: { something: 'Whatev' }\r\n    post foo_bars_url(bar_id: '789'), params: { doesnt: \"Matter\" }\r\n    # ... etc ...\r\n  end  \r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe call to `foo_bars_url(bar_id: '789')` should fail because I did not call it with a :foo_id.\r\n\r\n### Actual behavior\r\nThe call succeeds because the :foo_id which was passed to `foos_url()` in the previous line is still cached in `url_options`\r\n\r\n### System configuration\r\n**Rails version**: 5.2.1.1\r\n\r\n**Ruby version**: 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34639",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34639/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34639/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34639/events",
    "html_url": "https://github.com/rails/rails/issues/34639",
    "id": 388228066,
    "node_id": "MDU6SXNzdWUzODgyMjgwNjY=",
    "number": 34639,
    "title": "Enum type cast not working when used with nested joins",
    "user": {
      "login": "SzNagyMisu",
      "id": 25562614,
      "node_id": "MDQ6VXNlcjI1NTYyNjE0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/25562614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SzNagyMisu",
      "html_url": "https://github.com/SzNagyMisu",
      "followers_url": "https://api.github.com/users/SzNagyMisu/followers",
      "following_url": "https://api.github.com/users/SzNagyMisu/following{/other_user}",
      "gists_url": "https://api.github.com/users/SzNagyMisu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SzNagyMisu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SzNagyMisu/subscriptions",
      "organizations_url": "https://api.github.com/users/SzNagyMisu/orgs",
      "repos_url": "https://api.github.com/users/SzNagyMisu/repos",
      "events_url": "https://api.github.com/users/SzNagyMisu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SzNagyMisu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-12-06T14:04:33Z",
    "updated_at": "2018-12-06T16:09:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nGiven the following models\r\n```ruby\r\nclass Topic < ActiveRecord::Base\r\n  has_many :posts\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  belongs_to :topic\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\n  enum state: %i[ hidden visible ]\r\nend\r\n```\r\n\r\nif I try to query topics with hidden comments\r\n\r\n```ruby\r\nTopic.joins(posts: :comments).where(comments: { state: :hidden })\r\n```\r\n\r\nit does not type cast the enum value, so I get\r\n\r\n```sql\r\nSELECT \"topics\".* FROM \"topics\"\r\nINNER JOIN \"posts\" ON \"posts\".\"topic_id\" = \"topics\".\"id\"\r\nINNER JOIN \"comments\" ON \"comments\".\"post_id\" = \"posts\".\"id\"\r\nWHERE \"comments\".\"state\" = 'hidden'\r\n```\r\n\r\n### Expected behavior\r\nThe value of the enum column should be type casted to its database value (`0`) resulting in a query with where clause like this:\r\n\r\n```sql\r\nSELECT ... WHERE \"comments\".\"state\" = 0\r\n```\r\n\r\n### Actual behavior\r\nIt does not type cast the value of the enum column resulting in a where clause:\r\n\r\n```sql\r\nSELECT ... WHERE \"comments\".\"state\" = 'hidden'\r\n```\r\n\r\nThe more interesting is that if `Topic` has a `has_many :comments, through: :posts` relation, it makes the whole thing work, so not only\r\n\r\n```ruby\r\nTopic.joins(:comments).where(comments: { state: :hidden })\r\n```\r\n\r\nbut even\r\n\r\n```ruby\r\nTopic.joins(posts: :comments).where(comments: { state: :hidden })\r\n```\r\n\r\nhas the correct sql query generated.\r\n\r\nFrom what **it seems to me that type casting the value of the enum column works only _if the target model (`Topic`) has an own relation with the queried model (`Comment`)_.**\r\n\r\n### System configuration\r\n**Rails version**: 5.2.1\r\n\r\n**Ruby version**: 2.5.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34638",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34638/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34638/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34638/events",
    "html_url": "https://github.com/rails/rails/issues/34638",
    "id": 388182037,
    "node_id": "MDU6SXNzdWUzODgxODIwMzc=",
    "number": 34638,
    "title": "\"Leaky scopes\" when using self-referential association",
    "user": {
      "login": "balvig",
      "id": 104138,
      "node_id": "MDQ6VXNlcjEwNDEzOA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/104138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/balvig",
      "html_url": "https://github.com/balvig",
      "followers_url": "https://api.github.com/users/balvig/followers",
      "following_url": "https://api.github.com/users/balvig/following{/other_user}",
      "gists_url": "https://api.github.com/users/balvig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/balvig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/balvig/subscriptions",
      "organizations_url": "https://api.github.com/users/balvig/orgs",
      "repos_url": "https://api.github.com/users/balvig/repos",
      "events_url": "https://api.github.com/users/balvig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/balvig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-06T11:58:20Z",
    "updated_at": "2018-12-06T16:08:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\n\r\n1. Create a model with a self-referential association.\r\n2. Query the self-referential association from a class method on a scoped relation.\r\n3. The original scope affects the query to fetch the associated records too.\r\n\r\nI've created a dummy app showing the problem at https://github.com/balvig/dummy and also summarized the minimal code setup needed to cause the problem below. \r\n\r\nHope that works! 🙏 \r\n\r\n### Expected behavior\r\n\r\nWhen fetching records using a scope, I would expect that scope to not affect any queries used to fetch its `children`.\r\n\r\nIe:\r\n\r\n```rb\r\nclass Post < ApplicationRecord\r\n  has_many :children, class_name: \"Post\", foreign_key: \"parent_id\"\r\n\r\n  def self.leaky_scope\r\n    first.children.to_sql\r\n  end\r\nend\r\n\r\nPost.create!\r\ncollection = Post.where(read: false)\r\ncollection.leaky_scope\r\n```\r\n\r\nshould result in something like:\r\n\r\n```SQL\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"parent_id\" = 1\r\n```\r\n\r\n### Actual behavior\r\n\r\nWhen using class methods on the scoped collection, the current scope seems to affect queries for `children` too:\r\n\r\n```rb\r\ncollection = Post.where(read: false)\r\ncollection.leaky_scope\r\n```\r\n\r\nresults in:\r\n\r\n```SQL\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"read\" = 0 AND \"posts\".\"parent_id\" = 1 \r\n```\r\n\r\nie the `read = 0` scope is applied to the `children` query too.\r\n\r\nMeanwhile calling the exact same chain _outside_ a class method:\r\n\r\n```rb\r\ncollection = Post.where(read: false)\r\ncollection.first.children.to_sql\r\n```\r\n\r\ncorrectly outputs:\r\n\r\n```SQL\r\nSELECT \"posts\".* FROM \"posts\" WHERE \"posts\".\"parent_id\" = 1\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.2.1\r\n\r\n**Ruby version**: 2.4.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34637",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34637/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34637/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34637/events",
    "html_url": "https://github.com/rails/rails/issues/34637",
    "id": 388129286,
    "node_id": "MDU6SXNzdWUzODgxMjkyODY=",
    "number": 34637,
    "title": "ActiveRecord::Dirty does not work well with Transactions leaving model in an inconsistent state",
    "user": {
      "login": "prikha",
      "id": 594872,
      "node_id": "MDQ6VXNlcjU5NDg3Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/594872?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prikha",
      "html_url": "https://github.com/prikha",
      "followers_url": "https://api.github.com/users/prikha/followers",
      "following_url": "https://api.github.com/users/prikha/following{/other_user}",
      "gists_url": "https://api.github.com/users/prikha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prikha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prikha/subscriptions",
      "organizations_url": "https://api.github.com/users/prikha/orgs",
      "repos_url": "https://api.github.com/users/prikha/repos",
      "events_url": "https://api.github.com/users/prikha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prikha/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-06T09:38:36Z",
    "updated_at": "2018-12-06T16:03:18Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "body": "### Steps to reproduce\r\n\r\nTo be short: Changes marked as applied but are not committed. So rollback leaves a model in an inconsistent state.\r\n\r\nThe real issues arise when you have `partial_writes` enabled and have a database error while committing your transaction.\r\n\r\n```rb\r\n    user = User.new\r\n    user.email = \"unique@email.com\"\r\n    user.full_name = \"Another New Topic\"\r\n    changes_before_rollback = user.changes\r\n\r\n    User.transaction do\r\n      user.save!\r\n      raise ActiveRecord::Rollback\r\n    end\r\n\r\n    user.changes #=> {} but should be a hash with email and full_name changes\r\n    user.changes_before_rollback == user.changes # => false but should logically be true \r\n```\r\n\r\nIf one would decide to retry the transaction. It would lead to the following place.\r\n\r\nhttps://github.com/rails/rails/blob/a72ac3cfec9956ccf093d870705d3dc22ced090e/activerecord/lib/active_record/attribute_methods/dirty.rb#L179-L181\r\n\r\nWe have `partial_writes` enabled by default. So it would pick `keys_for_partial_write` which are just keys from `changes`. It would be blank on a retry attempt.\r\n\r\nWhy does it happen? I think the root is here: we mark changes as applied not caring about the transaction state.\r\n\r\nhttps://github.com/rails/rails/blob/a72ac3cfec9956ccf093d870705d3dc22ced090e/activerecord/lib/active_record/attribute_methods/dirty.rb#L173-L177\r\n\r\nThere is a related issue: https://github.com/rails/rails/issues/33443 having the same root cause I believe.\r\n\r\n### Expected behavior\r\n\r\nWe have the following examples in our WIP, but moving bits around breaks a lot of specs including associations:\r\n\r\n```rb\r\n# activerecord/test/cases/transactions_test.rb\r\n\r\n  def test_rollback_of_changed_attributes\r\n    topic = Topic.new\r\n    topic.title = \"New Topic\"\r\n    changes_before_rollback = topic.changes\r\n     Topic.transaction do\r\n      topic.save!\r\n      raise ActiveRecord::Rollback\r\n    end\r\n     changes = topic.changes.to_a\r\n     changes_before_rollback.to_a.each do |value|\r\n      assert_includes(changes, value)\r\n    end\r\n  end\r\n\r\n  def test_rollback_of_changed_attributes_for_persisted_record\r\n    topic = Topic.create\r\n    topic.title = \"New Topic\"\r\n     Topic.transaction do\r\n      topic.save!\r\n      raise ActiveRecord::Rollback\r\n    end\r\n     topic.save!\r\n     assert_equal(topic.title, \"New Topic\")\r\n  end\r\n```\r\n\r\nI would be super happy to involve anyone who is familiar with AR code and explicitly with `ActiveRecord::Dirty` + `Transactions`. We have attempted to fix this on our own but didn't reach any success. If @rafaelfranca @sgrif @amatsuda @kamipo you guys have any ideas on the right way of fixing this I would greatly appreciate!\r\n\r\n### Actual behavior\r\n\r\nNow on a rollback, we loose track of the changes in the model. That leads to random errors(e.g. not null column violation) in case of retry.\r\n\r\n### System configuration\r\n**Rails version**: master\r\n\r\n**Ruby version**: 2.5.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34633",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34633/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34633/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34633/events",
    "html_url": "https://github.com/rails/rails/pull/34633",
    "id": 387997534,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2MzYzNjcw",
    "number": 34633,
    "title": "Single Pass JSON emitter",
    "user": {
      "login": "tenderlove",
      "id": 3124,
      "node_id": "MDQ6VXNlcjMxMjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tenderlove",
      "html_url": "https://github.com/tenderlove",
      "followers_url": "https://api.github.com/users/tenderlove/followers",
      "following_url": "https://api.github.com/users/tenderlove/following{/other_user}",
      "gists_url": "https://api.github.com/users/tenderlove/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tenderlove/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tenderlove/subscriptions",
      "organizations_url": "https://api.github.com/users/tenderlove/orgs",
      "repos_url": "https://api.github.com/users/tenderlove/repos",
      "events_url": "https://api.github.com/users/tenderlove/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tenderlove/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-05T23:55:51Z",
    "updated_at": "2018-12-21T18:31:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34633",
      "html_url": "https://github.com/rails/rails/pull/34633",
      "diff_url": "https://github.com/rails/rails/pull/34633.diff",
      "patch_url": "https://github.com/rails/rails/pull/34633.patch"
    },
    "body": "This switches the \"as_json\" pattern to use a visitor instead of monkey patching core classes.  Since we are using a visitor it means we can switch implementations when dumping JSON and still get [escaped string support](\r\nhttps://github.com/rails/rails/blob/b802e08273f899d5f3b199f7c6a4f5d514c1b0e1/activesupport/lib/active_support/json/encoding.rb#L92) in one pass of the object graph.\r\n\r\nRefs: https://github.com/rails/rails/pull/34578"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34630",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34630/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34630/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34630/events",
    "html_url": "https://github.com/rails/rails/pull/34630",
    "id": 387874427,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM2MjY3MzQ4",
    "number": 34630,
    "title": "Remove tmp directories from yarn workspaces configuration",
    "user": {
      "login": "rmacklin",
      "id": 1863540,
      "node_id": "MDQ6VXNlcjE4NjM1NDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1863540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmacklin",
      "html_url": "https://github.com/rmacklin",
      "followers_url": "https://api.github.com/users/rmacklin/followers",
      "following_url": "https://api.github.com/users/rmacklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmacklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmacklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmacklin/subscriptions",
      "organizations_url": "https://api.github.com/users/rmacklin/orgs",
      "repos_url": "https://api.github.com/users/rmacklin/repos",
      "events_url": "https://api.github.com/users/rmacklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmacklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "javan",
      "id": 5355,
      "node_id": "MDQ6VXNlcjUzNTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5355?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javan",
      "html_url": "https://github.com/javan",
      "followers_url": "https://api.github.com/users/javan/followers",
      "following_url": "https://api.github.com/users/javan/following{/other_user}",
      "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
      "organizations_url": "https://api.github.com/users/javan/orgs",
      "repos_url": "https://api.github.com/users/javan/repos",
      "events_url": "https://api.github.com/users/javan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javan/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "javan",
        "id": 5355,
        "node_id": "MDQ6VXNlcjUzNTU=",
        "avatar_url": "https://avatars3.githubusercontent.com/u/5355?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/javan",
        "html_url": "https://github.com/javan",
        "followers_url": "https://api.github.com/users/javan/followers",
        "following_url": "https://api.github.com/users/javan/following{/other_user}",
        "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
        "organizations_url": "https://api.github.com/users/javan/orgs",
        "repos_url": "https://api.github.com/users/javan/repos",
        "events_url": "https://api.github.com/users/javan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/javan/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-12-05T17:52:43Z",
    "updated_at": "2018-12-18T12:58:17Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34630",
      "html_url": "https://github.com/rails/rails/pull/34630",
      "diff_url": "https://github.com/rails/rails/pull/34630.diff",
      "patch_url": "https://github.com/rails/rails/pull/34630.patch"
    },
    "body": "### Summary\r\n\r\nHaving these directories configured as yarn workspaces can cause you to generate an incorrect root yarn.lock when you run `yarn install` if you have stale files in these directories. This can be particularly troubling because the directories are ignored by git so it's not immediately obvious that you have files there which could be causing an invalid lockfile to be generated.\r\n\r\nAdditionally, [@lsylvester said](https://github.com/rails/rails/pull/34588#issuecomment-443547937) that his initial motiviation for including these directories was resolved by relaxing the requirements in the package.json template used by the app generator.\r\n\r\nSee this thread for more information on the problems this caused: https://github.com/rails/rails/pull/34588#issuecomment-443511651"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34628",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34628/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34628/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34628/events",
    "html_url": "https://github.com/rails/rails/issues/34628",
    "id": 387855444,
    "node_id": "MDU6SXNzdWUzODc4NTU0NDQ=",
    "number": 34628,
    "title": "Active storage migrate google service data to local service",
    "user": {
      "login": "sun-meihouwang",
      "id": 4454588,
      "node_id": "MDQ6VXNlcjQ0NTQ1ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4454588?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sun-meihouwang",
      "html_url": "https://github.com/sun-meihouwang",
      "followers_url": "https://api.github.com/users/sun-meihouwang/followers",
      "following_url": "https://api.github.com/users/sun-meihouwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/sun-meihouwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sun-meihouwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sun-meihouwang/subscriptions",
      "organizations_url": "https://api.github.com/users/sun-meihouwang/orgs",
      "repos_url": "https://api.github.com/users/sun-meihouwang/repos",
      "events_url": "https://api.github.com/users/sun-meihouwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sun-meihouwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 664533972,
        "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
        "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
        "name": "activestorage",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-05T17:04:36Z",
    "updated_at": "2018-12-06T17:16:21Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nGiven 2 environments:\r\n* development using `:local` storage service\r\n* production using `:google` storage service\r\n\r\nImport data from production env to development env:\r\n* import production db\r\n* copy all the gcs bucket files to `/storage`\r\n\r\n### Expected behavior\r\nIn development, I want to see my attached image that I just copied from production.\r\n\r\n### Actual behavior\r\nError when requesting an image:\r\n```\r\nErrno::ENOENT in ActiveStorage::RepresentationsController#show\r\nNo such file or directory @ rb_sysopen ....\r\n```\r\nIt seems a file named `/Mk3TCaW8583RYewooRpeY9VZ` on gcs bucket should be accessible\r\nat `/Mk/3T/Mk3TCaW8583RYewooRpeY9VZ` \r\n\r\nIs there any ways/scripts/...  to convert data from gcs to local storage when importing from production?\r\nThanks\r\n\r\n### System configuration\r\n**Rails version**: 5.2\r\n\r\n**Ruby version**: 2.5.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34618",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34618/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34618/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34618/events",
    "html_url": "https://github.com/rails/rails/pull/34618",
    "id": 387502944,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1OTc3OTM1",
    "number": 34618,
    "title": "Fix elapsed time calculations",
    "user": {
      "login": "bogdanvlviv",
      "id": 6443532,
      "node_id": "MDQ6VXNlcjY0NDM1MzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6443532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bogdanvlviv",
      "html_url": "https://github.com/bogdanvlviv",
      "followers_url": "https://api.github.com/users/bogdanvlviv/followers",
      "following_url": "https://api.github.com/users/bogdanvlviv/following{/other_user}",
      "gists_url": "https://api.github.com/users/bogdanvlviv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bogdanvlviv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bogdanvlviv/subscriptions",
      "organizations_url": "https://api.github.com/users/bogdanvlviv/orgs",
      "repos_url": "https://api.github.com/users/bogdanvlviv/repos",
      "events_url": "https://api.github.com/users/bogdanvlviv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bogdanvlviv/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-12-04T22:12:37Z",
    "updated_at": "2018-12-05T21:12:32Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34618",
      "html_url": "https://github.com/rails/rails/pull/34618",
      "diff_url": "https://github.com/rails/rails/pull/34618.diff",
      "patch_url": "https://github.com/rails/rails/pull/34618.patch"
    },
    "body": "Hello,\r\n\r\nI've found a few places in Rails code base where I think it makes sense to calculate elapsed time more precisely by using `Process.clock_gettime(Process::CLOCK_MONOTONIC)`:\r\n\r\n- `ActiveSupport::Cache::MemoryStore#prune`\r\n- `ActiveRecord::ConnectionAdapters::ConnectionPool::Queue#wait_poll`\r\n- `ActiveRecord::ConnectionAdapters::ConnectionPool#attempt_to_checkout_all_existing_connections`\r\n- `ActiveRecord::ConnectionAdapters::Mysql2Adapter#explain`\r\n\r\nSee\r\nhttps://docs.ruby-lang.org/en/2.5.0/Process.html#method-c-clock_gettime\r\nhttps://blog.dnsimple.com/2018/03/elapsed-time-with-ruby-the-right-way\r\n\r\nRelated to 7c4542146f0dde962205e5a90839349631ae60fb"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34614",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34614/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34614/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34614/events",
    "html_url": "https://github.com/rails/rails/issues/34614",
    "id": 387372365,
    "node_id": "MDU6SXNzdWUzODczNzIzNjU=",
    "number": 34614,
    "title": "Unexpected behavior when using multiple conditional layouts",
    "user": {
      "login": "phillipspc",
      "id": 11082871,
      "node_id": "MDQ6VXNlcjExMDgyODcx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/11082871?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/phillipspc",
      "html_url": "https://github.com/phillipspc",
      "followers_url": "https://api.github.com/users/phillipspc/followers",
      "following_url": "https://api.github.com/users/phillipspc/following{/other_user}",
      "gists_url": "https://api.github.com/users/phillipspc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/phillipspc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/phillipspc/subscriptions",
      "organizations_url": "https://api.github.com/users/phillipspc/orgs",
      "repos_url": "https://api.github.com/users/phillipspc/repos",
      "events_url": "https://api.github.com/users/phillipspc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/phillipspc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "node_id": "MDU6TGFiZWwxMDcxODk=",
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2018-12-04T16:31:39Z",
    "updated_at": "2018-12-05T08:26:14Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Here's an example controller:\r\n```ruby\r\nclass PagesController < ApplicationController\r\n  layout \"layout_one\", only: :one\r\n  layout \"layout_two\", only: :two\r\n\r\n  def one\r\n  end\r\n\r\n  def two\r\n  end\r\nend\r\n```\r\n### Expected behavior\r\nGiven that `layout` and `before_action` both use the same conditional syntax, I think its reasonable to expect the similar behavior from the two, ie. \"layout_one\" is used by the \"one\" action, and \"layout_two\" is used by \"two\".\r\n\r\n### Steps to reproduce\r\nminimal rails project: https://github.com/phillipspc/layout_test\r\n\r\n### Actual behavior\r\n`pages#one` will use the default \"application\" layout, and `pages#two` will use \"layout_two\".\r\n\r\nI'm aware that I could achieve what I want using a `Proc`, but I think ideally you could declare multiple conditional layouts in your controller and have it work as expected."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34613",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34613/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34613/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34613/events",
    "html_url": "https://github.com/rails/rails/issues/34613",
    "id": 387324322,
    "node_id": "MDU6SXNzdWUzODczMjQzMjI=",
    "number": 34613,
    "title": "Wrong query with scope and has_many polymorphic association",
    "user": {
      "login": "afdev82",
      "id": 4134610,
      "node_id": "MDQ6VXNlcjQxMzQ2MTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4134610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/afdev82",
      "html_url": "https://github.com/afdev82",
      "followers_url": "https://api.github.com/users/afdev82/followers",
      "following_url": "https://api.github.com/users/afdev82/following{/other_user}",
      "gists_url": "https://api.github.com/users/afdev82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/afdev82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/afdev82/subscriptions",
      "organizations_url": "https://api.github.com/users/afdev82/orgs",
      "repos_url": "https://api.github.com/users/afdev82/repos",
      "events_url": "https://api.github.com/users/afdev82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/afdev82/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-04T14:55:00Z",
    "updated_at": "2018-12-04T19:51:42Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nI created a test.rb to reproduce it:\r\n\r\n```\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.2.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :pages, force: true do |t|\r\n  end\r\n\r\n  create_table :elements, force: true do |t|\r\n    t.integer :page_id\r\n  end\r\n\r\n  create_table :contents, force: true do |t|\r\n    t.integer :element_id\r\n    t.integer :essence_id\r\n    t.string  :essence_type\r\n  end\r\n\r\n  create_table :essence_texts, force: true do |t|\r\n    t.boolean :searchable\r\n  end\r\nend\r\n\r\nclass Page < ActiveRecord::Base\r\n  has_many :elements\r\n\r\n  has_many :contents,\r\n           through: :elements\r\n\r\n  has_many :essence_texts,\r\n           through: :contents,\r\n           source: :essence,\r\n           source_type: 'EssenceText'\r\n\r\n  has_many :searchable_essence_texts,\r\n           -> { where(searchable: true) },\r\n           through: :contents,\r\n           source: :essence,\r\n           source_type: 'EssenceText',\r\n           class_name: 'EssenceText'\r\nend\r\n\r\nclass Element < ActiveRecord::Base\r\n  belongs_to :page,\r\n             inverse_of: :elements\r\n\r\n  has_many :contents\r\nend\r\n\r\nclass Content < ActiveRecord::Base\r\n  belongs_to :essence,\r\n             polymorphic: true\r\n\r\n  belongs_to :element,\r\n             inverse_of: :contents\r\n\r\n  has_one :page,\r\n          through: :element\r\nend\r\n\r\nclass EssenceText < ActiveRecord::Base\r\n  has_one :content,\r\n          as: :essence\r\n\r\n  has_one :element,\r\n          through: :content\r\n\r\n  has_one :page,\r\n          through: :element\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    page1 = Page.create!\r\n    element1 = Element.create!\r\n    Content.create! element: element1,\r\n                    essence: EssenceText.create!(searchable: true)\r\n\r\n    page1.elements << element1\r\n\r\n    assert_equal 1, Page.joins(:essence_texts).count\r\n    assert_equal 1, Page.joins(:searchable_essence_texts).count\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nThe test should pass.\r\n\r\n### Actual behavior\r\nThe second assertion fails, because the SQL query generated is wrong.\r\nIt applies the scope of the `has_many` association `searchable_essence_texts` to the table `contents` and also to the right table (`essence_texts`).\r\n\r\nRails 5.0.7.1\r\n```\r\nSELECT COUNT(*)\r\nFROM \"pages\"\r\nINNER JOIN \"elements\" ON \"elements\".\"page_id\" = \"pages\".\"id\"\r\nINNER JOIN \"contents\" ON \"contents\".\"element_id\" = \"elements\".\"id\" AND \"contents\".\"essence_type\" = ?\r\nINNER JOIN \"essence_texts\" ON \"essence_texts\".\"id\" = \"contents\".\"essence_id\" AND \"essence_texts\".\"searchable\" = ?\r\n```\r\nRails 5.2.1.1\r\n```\r\nSELECT COUNT(*)\r\nFROM \"pages\"\r\nINNER JOIN \"elements\" ON \"elements\".\"page_id\" = \"pages\".\"id\"\r\nINNER JOIN \"contents\" ON \"contents\".\"element_id\" = \"elements\".\"id\" AND \"contents\".\"searchable\" = ? AND \"contents\".\"essence_type\" = ?\r\nINNER JOIN \"essence_texts\" ON \"essence_texts\".\"id\" = \"contents\".\"essence_id\" AND \"essence_texts\".\"searchable\" = ?\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.1.0 / 5.2.0 / master, **it works with 5.0.7.1**\r\n\r\n**Ruby version**: ruby 2.4.4\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34604",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34604/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34604/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34604/events",
    "html_url": "https://github.com/rails/rails/pull/34604",
    "id": 386738219,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1Mzg1MjY5",
    "number": 34604,
    "title": "Extract metadata from multiple analyzers",
    "user": {
      "login": "frodsan",
      "id": 840464,
      "node_id": "MDQ6VXNlcjg0MDQ2NA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/840464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/frodsan",
      "html_url": "https://github.com/frodsan",
      "followers_url": "https://api.github.com/users/frodsan/followers",
      "following_url": "https://api.github.com/users/frodsan/following{/other_user}",
      "gists_url": "https://api.github.com/users/frodsan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/frodsan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/frodsan/subscriptions",
      "organizations_url": "https://api.github.com/users/frodsan/orgs",
      "repos_url": "https://api.github.com/users/frodsan/repos",
      "events_url": "https://api.github.com/users/frodsan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/frodsan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 664533972,
        "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
        "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
        "name": "activestorage",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "georgeclaghorn",
      "id": 94129,
      "node_id": "MDQ6VXNlcjk0MTI5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/94129?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgeclaghorn",
      "html_url": "https://github.com/georgeclaghorn",
      "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
      "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgeclaghorn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
      "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
      "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
      "events_url": "https://api.github.com/users/georgeclaghorn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "georgeclaghorn",
        "id": 94129,
        "node_id": "MDQ6VXNlcjk0MTI5",
        "avatar_url": "https://avatars1.githubusercontent.com/u/94129?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/georgeclaghorn",
        "html_url": "https://github.com/georgeclaghorn",
        "followers_url": "https://api.github.com/users/georgeclaghorn/followers",
        "following_url": "https://api.github.com/users/georgeclaghorn/following{/other_user}",
        "gists_url": "https://api.github.com/users/georgeclaghorn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/georgeclaghorn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/georgeclaghorn/subscriptions",
        "organizations_url": "https://api.github.com/users/georgeclaghorn/orgs",
        "repos_url": "https://api.github.com/users/georgeclaghorn/repos",
        "events_url": "https://api.github.com/users/georgeclaghorn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/georgeclaghorn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-12-03T09:56:25Z",
    "updated_at": "2018-12-03T17:59:57Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34604",
      "html_url": "https://github.com/rails/rails/pull/34604",
      "diff_url": "https://github.com/rails/rails/pull/34604.diff",
      "patch_url": "https://github.com/rails/rails/pull/34604.patch"
    },
    "body": "Hi! I'd like to add gps metadata to the uploaded images in my project. What do you think on adding support for multiple analyzers updating the uploaded image metadata?\r\n\r\nref: https://www.georg-ledermann.de/blog/2018/05/15/exif-analyzer-for-active-storage/\r\n\r\nr? @georgeclaghorn\r\n\r\nThanks!"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34603",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34603/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34603/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34603/events",
    "html_url": "https://github.com/rails/rails/issues/34603",
    "id": 386736018,
    "node_id": "MDU6SXNzdWUzODY3MzYwMTg=",
    "number": 34603,
    "title": "has_one :through with namespaced models",
    "user": {
      "login": "madejejej",
      "id": 2053337,
      "node_id": "MDQ6VXNlcjIwNTMzMzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2053337?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madejejej",
      "html_url": "https://github.com/madejejej",
      "followers_url": "https://api.github.com/users/madejejej/followers",
      "following_url": "https://api.github.com/users/madejejej/following{/other_user}",
      "gists_url": "https://api.github.com/users/madejejej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madejejej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madejejej/subscriptions",
      "organizations_url": "https://api.github.com/users/madejejej/orgs",
      "repos_url": "https://api.github.com/users/madejejej/repos",
      "events_url": "https://api.github.com/users/madejejej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madejejej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "node_id": "MDU6TGFiZWwxMDcxOTE=",
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-03T09:50:38Z",
    "updated_at": "2018-12-03T16:45:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "### Steps to reproduce\r\nCreate two AR classes in different namespaces: `Post` and `Namespaced::Post` and a `Comment` class.\r\n\r\nWhen using `has_one :post, through: comment` on `Namespaced::Post`, AR mistakenly thinks that `post` references to `Namespaced::Post` and generates the following query:\r\n\r\n```sql\r\nD, [2018-12-03T16:41:43.543099 #10124] DEBUG -- :   Namespaced::Post Load (0.2ms)  SELECT  \"namespaced_posts\".* FROM \"namespaced_posts\" INNER JOIN \"comments\" ON \"namespaced_posts\".\"id\" = \"comments\".\"post_id\" WHERE \"comments\".\"id\" = ? LIMIT ?  [[\"id\", 1], [\"LIMIT\", 1]]\r\n```\r\n\r\ninstead of loading un-namespaced `Post` record.\r\n\r\n```ruby\r\n# frozen_string_literal: true\r\n\r\nrequire \"bundler/inline\"\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n\r\n  git_source(:github) { |repo| \"https://github.com/#{repo}.git\" }\r\n\r\n  # Activate the gem you are reporting the issue against.\r\n  gem \"activerecord\", \"5.2.0\"\r\n  gem \"sqlite3\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n  end\r\n\r\n  create_table :comments, force: true do |t|\r\n    t.integer :post_id\r\n  end\r\n\r\n  create_table :namespaced_posts, force: true do |t|\r\n    t.integer :comment_id\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  has_many :comments\r\nend\r\n\r\nclass Comment < ActiveRecord::Base\r\n  belongs_to :post\r\nend\r\n\r\nmodule Namespaced\r\n  class Post < ActiveRecord::Base\r\n    def self.table_name_prefix\r\n      \"namespaced_\"\r\n    end\r\n\r\n    belongs_to :comment\r\n    has_one :post, through: :comment\r\n  end\r\nend\r\n\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_association_stuff\r\n    post = Post.create!\r\n    comment = Comment.create!(post: post)\r\n\r\n    namespaced_post = Namespaced::Post.create!(comment_id: comment.id)\r\n\r\n    assert_equal post, namespaced_post.post\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe generated query should fetch `Post` objects instead of `Namespaced::Post`.\r\n\r\n### Actual behavior\r\n\r\n```\r\n  1) Failure:\r\nBugTest#test_association_stuff [ar-bug.rb:63]:\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-#<Post id: 1>\r\n+#<Namespaced::Post id: 1, comment_id: 1>\r\n```\r\n\r\n### System configuration\r\n**ActiveRecord version**: 5.2.0, 5.2.1.1\r\n**Ruby version**: ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin17]\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34584",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34584/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34584/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34584/events",
    "html_url": "https://github.com/rails/rails/pull/34584",
    "id": 386445725,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1MTg1MzEz",
    "number": 34584,
    "title": "Extract `ActiveSupport::DeepTransformKeys`",
    "user": {
      "login": "kamipo",
      "id": 12642,
      "node_id": "MDQ6VXNlcjEyNjQy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12642?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2018-12-01T10:30:42Z",
    "updated_at": "2018-12-20T16:19:04Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34584",
      "html_url": "https://github.com/rails/rails/pull/34584",
      "diff_url": "https://github.com/rails/rails/pull/34584.diff",
      "patch_url": "https://github.com/rails/rails/pull/34584.patch"
    },
    "body": "An alternative of #24721.\r\n\r\nPeople sometimes need to deep transform keys against JSON array.\r\nTo reuse the deep transform code, I'd like to extract that as the\r\n`ActiveSupport::DeepTransformKeys`."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34581",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34581/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34581/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34581/events",
    "html_url": "https://github.com/rails/rails/pull/34581",
    "id": 386400285,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1MTU0NDY0",
    "number": 34581,
    "title": "[WIP] Add public_service_url for public assets.",
    "user": {
      "login": "gmcgibbon",
      "id": 5162312,
      "node_id": "MDQ6VXNlcjUxNjIzMTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5162312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmcgibbon",
      "html_url": "https://github.com/gmcgibbon",
      "followers_url": "https://api.github.com/users/gmcgibbon/followers",
      "following_url": "https://api.github.com/users/gmcgibbon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmcgibbon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmcgibbon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmcgibbon/subscriptions",
      "organizations_url": "https://api.github.com/users/gmcgibbon/orgs",
      "repos_url": "https://api.github.com/users/gmcgibbon/repos",
      "events_url": "https://api.github.com/users/gmcgibbon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmcgibbon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 664533972,
        "node_id": "MDU6TGFiZWw2NjQ1MzM5NzI=",
        "url": "https://api.github.com/repos/rails/rails/labels/activestorage",
        "name": "activestorage",
        "color": "bfd4f2",
        "default": false
      },
      {
        "id": 150377,
        "node_id": "MDU6TGFiZWwxNTAzNzc=",
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "node_id": "MDQ6VXNlcjQ3ODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-12-01T00:44:19Z",
    "updated_at": "2018-12-03T20:49:54Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34581",
      "html_url": "https://github.com/rails/rails/pull/34581",
      "diff_url": "https://github.com/rails/rails/pull/34581.diff",
      "patch_url": "https://github.com/rails/rails/pull/34581.patch"
    },
    "body": "### Summary\r\n\r\nFixes https://github.com/rails/rails/issues/34552.\r\n\r\nAdds `ActiveStorage::Blob#service_url` example to guides.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/34578",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/34578/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/34578/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/34578/events",
    "html_url": "https://github.com/rails/rails/pull/34578",
    "id": 386356816,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MjM1MTIwNDA1",
    "number": 34578,
    "title": "Remove `as_json` from value and tests",
    "user": {
      "login": "eileencodes",
      "id": 1080678,
      "node_id": "MDQ6VXNlcjEwODA2Nzg=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1080678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 107194,
        "node_id": "MDU6TGFiZWwxMDcxOTQ=",
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/63",
      "html_url": "https://github.com/rails/rails/milestone/63",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/63/labels",
      "id": 2828826,
      "node_id": "MDk6TWlsZXN0b25lMjgyODgyNg==",
      "number": 63,
      "title": "6.0.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "node_id": "MDQ6VXNlcjQ3ODQ4",
        "avatar_url": "https://avatars3.githubusercontent.com/u/47848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 24,
      "closed_issues": 54,
      "state": "open",
      "created_at": "2017-10-10T22:08:21Z",
      "updated_at": "2019-01-04T19:46:54Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 25,
    "created_at": "2018-11-30T21:28:58Z",
    "updated_at": "2018-12-06T00:26:48Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/34578",
      "html_url": "https://github.com/rails/rails/pull/34578",
      "diff_url": "https://github.com/rails/rails/pull/34578.diff",
      "patch_url": "https://github.com/rails/rails/pull/34578.patch"
    },
    "body": "TL;DR `as_json` is slow. We're trying to replace JSON with Yajl but are hitting problem with the weirdness that are the monkey patches around JSON in AS. We found that some JSON is getting parsed 3 times! and one of the calls was supposed to be [deprecated awhile ago](https://github.com/rails/rails/pull/26933#issuecomment-260185056). Can we remove this without deprecation? If not can we deprecate it in 5.2 even though that's non-standard?\r\n\r\n---\r\n\r\nRemoving `as_json` here revealed that these tests failed because they\r\nreturn a non-json compliant value of NaNNumber and InfinitNumber.\r\n\r\nWhile we've supported this for awhile one of the issues with this\r\nsupport is that once we hit `jsonify` all the values _should_ already be\r\njson-compliant values. These tests I removed were added in #26933 - but\r\nin the comments on that PR they were supposed to be deprecated and\r\nremoved in the next cycle - but that work never happened. See\r\nhttps://github.com/rails/rails/pull/26933#issuecomment-260185056\r\n\r\nWe want to remove this `as_json` here because Rails JSON is very slow.\r\nOne of the reasons it's slow is because in some cases we actually loop\r\nover the JSON we're parsing 3 times!\r\n\r\nHere are the passes:\r\n\r\n1. Call as_json on a tree of objects\r\n  1a. Special objects pass the options down. These are\r\n  Object, Struct, Enumerable, Array, Hash\r\n  1b. This first pass eliminates Structs, Enumerables, and Objects\r\n  Structs replaced with hashes, Enumerables -> Arrays, Objects -> Hash\r\n  1c. New tree contains only: String, Number, Hash, Array, nil, true,\r\n  false\r\n2. Tree is walked again\r\n  2a. Convert Strings to EscapedStrings\r\n  2b. Can retun bad values from as_json (like the infinity and nan)\r\n3. Convert to json\r\n\r\nBy removing this `as_json` we reduce one of the passes for this case.\r\nThe argument here is that the first pass should never have returned a\r\nbad value so we shouldn't have to walk those values a second time - the\r\nvalue should be `nil` (which it what it will be on pass 3).\r\n\r\n[Eileen M. Uchitelle & Aaron Patterson]\r\n\r\ncc/ @rafaelfranca @tenderlove @matthewd @jeremy (who else is json knowledgable?)"
  }
]